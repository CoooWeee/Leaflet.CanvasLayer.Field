{"version":3,"file":"leaflet.canvaslayer.field.js","mappings":"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","sources":["webpack:///./layer/L.CanvasLayer.Field.js","webpack:///./control/L.Control.ColorBar.js","webpack:///./Cell.js","webpack:///../node_modules/chroma-js/src/utils/limit.js","webpack:///../node_modules/chroma-js/src/utils/clip_rgb.js","webpack:///../node_modules/chroma-js/src/utils/type.js","webpack:///../node_modules/chroma-js/src/utils/unpack.js","webpack:///../node_modules/chroma-js/src/utils/last.js","webpack:///../node_modules/chroma-js/src/utils/index.js","webpack:///../node_modules/chroma-js/src/io/input.js","webpack:///../node_modules/chroma-js/src/Color.js","webpack:///../node_modules/chroma-js/src/chroma.js","webpack:///../node_modules/chroma-js/src/version.js","webpack:///../node_modules/chroma-js/src/colors/w3cx11.js","webpack:///../node_modules/chroma-js/src/io/hex/hex2rgb.js","webpack:///../node_modules/chroma-js/src/io/hex/rgb2hex.js","webpack:///../node_modules/chroma-js/src/io/named/index.js","webpack:///../node_modules/chroma-js/src/ops/alpha.js","webpack:///../node_modules/chroma-js/src/ops/clipped.js","webpack:///../node_modules/chroma-js/src/io/lab/lab-constants.js","webpack:///../node_modules/chroma-js/src/io/lab/lab2rgb.js","webpack:///../node_modules/chroma-js/src/io/lab/rgb2lab.js","webpack:///../node_modules/chroma-js/src/io/lab/index.js","webpack:///../node_modules/chroma-js/src/ops/darken.js","webpack:///../node_modules/chroma-js/src/ops/get.js","webpack:///../node_modules/chroma-js/src/ops/luminance.js","webpack:///../node_modules/chroma-js/src/interpolator/index.js","webpack:///../node_modules/chroma-js/src/generator/mix.js","webpack:///../node_modules/chroma-js/src/ops/mix.js","webpack:///../node_modules/chroma-js/src/ops/premultiply.js","webpack:///../node_modules/chroma-js/src/io/lch/lch2lab.js","webpack:///../node_modules/chroma-js/src/io/lch/lch2rgb.js","webpack:///../node_modules/chroma-js/src/io/lch/lab2lch.js","webpack:///../node_modules/chroma-js/src/io/lch/rgb2lch.js","webpack:///../node_modules/chroma-js/src/io/lch/index.js","webpack:///../node_modules/chroma-js/src/io/lch/hcl2rgb.js","webpack:///../node_modules/chroma-js/src/ops/saturate.js","webpack:///../node_modules/chroma-js/src/ops/set.js","webpack:///../node_modules/chroma-js/src/ops/shade.js","webpack:///../node_modules/chroma-js/src/interpolator/rgb.js","webpack:///../node_modules/chroma-js/src/interpolator/lrgb.js","webpack:///../node_modules/chroma-js/src/interpolator/lab.js","webpack:///../node_modules/chroma-js/src/interpolator/_hsx.js","webpack:///../node_modules/chroma-js/src/interpolator/lch.js","webpack:///../node_modules/chroma-js/src/io/num/index.js","webpack:///../node_modules/chroma-js/src/io/num/rgb2num.js","webpack:///../node_modules/chroma-js/src/io/num/num2rgb.js","webpack:///../node_modules/chroma-js/src/interpolator/num.js","webpack:///../node_modules/chroma-js/src/io/hcg/hcg2rgb.js","webpack:///../node_modules/chroma-js/src/io/hcg/index.js","webpack:///../node_modules/chroma-js/src/io/hcg/rgb2hcg.js","webpack:///../node_modules/chroma-js/src/interpolator/hcg.js","webpack:///../node_modules/chroma-js/src/io/hsi/hsi2rgb.js","webpack:///../node_modules/chroma-js/src/io/hsi/rgb2hsi.js","webpack:///../node_modules/chroma-js/src/io/hsi/index.js","webpack:///../node_modules/chroma-js/src/interpolator/hsi.js","webpack:///../node_modules/chroma-js/src/io/hsl/hsl2rgb.js","webpack:///../node_modules/chroma-js/src/io/hsl/rgb2hsl.js","webpack:///../node_modules/chroma-js/src/io/hsl/index.js","webpack:///../node_modules/chroma-js/src/interpolator/hsl.js","webpack:///../node_modules/chroma-js/src/io/hsv/hsv2rgb.js","webpack:///../node_modules/chroma-js/src/io/hsv/rgb2hsv.js","webpack:///../node_modules/chroma-js/src/io/hsv/index.js","webpack:///../node_modules/chroma-js/src/utils/multiply-matrices.js","webpack:///../node_modules/chroma-js/src/interpolator/hsv.js","webpack:///../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","webpack:///../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","webpack:///../node_modules/chroma-js/src/io/oklab/index.js","webpack:///../node_modules/chroma-js/src/interpolator/oklab.js","webpack:///../node_modules/chroma-js/src/interpolator/oklch.js","webpack:///../node_modules/chroma-js/src/generator/average.js","webpack:///../node_modules/chroma-js/src/generator/scale.js","webpack:///../node_modules/chroma-js/src/generator/bezier.js","webpack:///../node_modules/chroma-js/src/io/rgb/index.js","webpack:///../node_modules/chroma-js/src/generator/blend.js","webpack:///../node_modules/chroma-js/src/generator/cubehelix.js","webpack:///../node_modules/chroma-js/src/generator/random.js","webpack:///../node_modules/chroma-js/src/utils/analyze.js","webpack:///../node_modules/chroma-js/src/utils/contrast.js","webpack:///../node_modules/chroma-js/src/utils/contrastAPCA.js","webpack:///../node_modules/chroma-js/src/utils/delta-e.js","webpack:///../node_modules/chroma-js/src/utils/scales.js","webpack:///../node_modules/chroma-js/src/colors/colorbrewer.js","webpack:///../node_modules/chroma-js/src/io/cmyk/rgb2cmyk.js","webpack:///../node_modules/chroma-js/src/io/cmyk/index.js","webpack:///../node_modules/chroma-js/src/io/cmyk/cmyk2rgb.js","webpack:///../node_modules/chroma-js/src/io/css/hsl2css.js","webpack:///../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","webpack:///../node_modules/chroma-js/src/io/css/rgb2css.js","webpack:///../node_modules/chroma-js/src/io/css/lab2css.js","webpack:///../node_modules/chroma-js/src/io/css/lch2css.js","webpack:///../node_modules/chroma-js/src/io/css/oklab2css.js","webpack:///../node_modules/chroma-js/src/io/css/oklch2css.js","webpack:///../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","webpack:///../node_modules/chroma-js/src/io/css/css2rgb.js","webpack:///../node_modules/chroma-js/src/io/css/index.js","webpack:///../node_modules/chroma-js/src/io/gl/index.js","webpack:///../node_modules/chroma-js/src/io/hex/index.js","webpack:///../node_modules/chroma-js/src/io/temp/temperature2rgb.js","webpack:///../node_modules/chroma-js/src/io/temp/rgb2temperature.js","webpack:///../node_modules/chroma-js/src/io/temp/index.js","webpack:///../node_modules/chroma-js/src/io/oklch/index.js","webpack:///../node_modules/chroma-js/index.js","webpack:///../node_modules/chroma-js/src/utils/distance.js","webpack:///../node_modules/chroma-js/src/utils/valid.js","webpack:///./layer/L.CanvasLayer.ScalarField.js","webpack:///./layer/L.CanvasLayer.js","webpack:///./layer/L.CanvasLayer.SimpleLonLat.js","webpack:///./control/L.Control.LayersPlayer.js","webpack:///./layer/L.CanvasLayer.VectorFieldAnim.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./Vector.js","webpack:///../node_modules/point-in-polygon-hao/dist/pointInPolygon.mjs","webpack:///./Field.js","webpack:///../node_modules/@turf/boolean-point-in-polygon/dist/esm/index.js","webpack:///../node_modules/@turf/invariant/dist/esm/index.js","webpack:///./ScalarField.js","webpack:///./VectorField.js","webpack:///./_main.js"],"sourcesContent":["/**\n * Abstract class for a Field layer on canvas, aka 'a Raster layer'\n * (ScalarField or a VectorField)\n */\nL.CanvasLayer.Field = L.CanvasLayer.extend({\n    options: {\n        mouseMoveCursor: {\n            value: 'pointer',\n            noValue: 'default'\n        },\n        opacity: 1,\n        onClick: null,\n        onMouseMove: null,\n        inFilter: null\n    },\n\n    initialize: function(field, options) {\n        L.Util.setOptions(this, options);\n        this._visible = true;\n        if (field) {\n            this.setData(field);\n        }\n    },\n\n    getEvents: function() {\n        var events = L.CanvasLayer.prototype.getEvents.call(this);\n        events.zoomstart = this._hideCanvas.bind(this);\n        events.zoomend = this._showCanvas.bind(this);\n        return events;\n    },\n\n    onLayerDidMount: function() {\n        this._enableIdentify();\n        this._ensureCanvasAlignment();\n    },\n\n    show() {\n        this._visible = true;\n        this._showCanvas();\n        this._enableIdentify();\n    },\n\n    hide() {\n        this._visible = false;\n        this._hideCanvas();\n        this._disableIdentify();\n    },\n\n    isVisible() {\n        return this._visible;\n    },\n\n    _showCanvas() {\n        if (this._canvas && this._visible) {\n            this._canvas.style.visibility = 'visible';\n        }\n    },\n\n    _hideCanvas() {\n        if (this._canvas) {\n            this._canvas.style.visibility = 'hidden';\n        }\n    },\n\n    _enableIdentify() {\n        this._map.on('click', this._onClick, this);\n        this._map.on('mousemove', this._onMouseMove, this);\n\n        this.options.onClick && this.on('click', this.options.onClick, this);\n        this.options.onMouseMove &&\n            this.on('mousemove', this.options.onMouseMove, this);\n    },\n\n    _disableIdentify() {\n        this._map.off('click', this._onClick, this);\n        this._map.off('mousemove', this._onMouseMove, this);\n\n        this.options.onClick && this.off('click', this.options.onClick, this);\n        this.options.onMouseMove &&\n            this.off('mousemove', this.options.onMouseMove, this);\n    },\n\n    _ensureCanvasAlignment() {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n    },\n\n    onLayerWillUnmount: function() {\n        this._disableIdentify();\n    },\n\n    needRedraw() {\n        if (this._map && this._field) {\n            L.CanvasLayer.prototype.needRedraw.call(this);\n        }\n    },\n\n    /* eslint-disable no-unused-vars */\n    onDrawLayer: function(viewInfo) {\n        throw new TypeError('Must be overriden');\n    },\n    /* eslint-enable no-unused-vars */\n\n    setData: function(field) {\n        this.options.inFilter && field.setFilter(this.options.inFilter);\n        this._field = field;\n        this.needRedraw();\n        this.fire('load');\n    },\n\n    setFilter: function(f) {\n        this.options.inFilter = f;\n        this._field && this._field.setFilter(f);\n        this.needRedraw();\n    },\n\n    setOpacity: function(opacity) {\n        this.options.opacity = opacity;\n\n        if (this._canvas) {\n            this._updateOpacity();\n        }\n        return this;\n    },\n\n    getBounds: function() {\n        let bb = this._field.extent();\n\n        let southWest = L.latLng(bb[1], bb[0]),\n            northEast = L.latLng(bb[3], bb[2]);\n        let bounds = L.latLngBounds(southWest, northEast);\n        return bounds;\n    },\n\n    _onClick: function(e) {\n        let v = this._queryValue(e);\n        this.fire('click', v);\n    },\n\n    _onMouseMove: function(e) {\n        let v = this._queryValue(e);\n        this._changeCursorOn(v);\n        this.fire('mousemove', v);\n    },\n\n    _changeCursorOn: function(v) {\n        if (!this.options.mouseMoveCursor) return;\n\n        let { value, noValue } = this.options.mouseMoveCursor;\n        let style = this._map.getContainer().style;\n        style.cursor = v.value !== null ? value : noValue;\n    },\n\n    _updateOpacity: function() {\n        L.DomUtil.setOpacity(this._canvas, this.options.opacity);\n    },\n\n    _queryValue: function(e) {\n        let v = this._field\n            ? this._field.valueAt(e.latlng.lng, e.latlng.lat)\n            : null;\n        let result = {\n            latlng: e.latlng,\n            value: v\n        };\n        return result;\n    },\n\n    _getDrawingContext: function() {\n        let g = this._canvas.getContext('2d');\n        g.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        return g;\n    }\n});\n","/**\n *   Control for a simple legend with a colorbar\n *   References:\n *      - http://jsfiddle.net/ramnathv/g8stqcf6/\n *      - http://jsfiddle.net/vis4/cYLZH/\n */\nL.Control.ColorBar = L.Control.extend({\n    options: {\n        position: 'bottomleft',\n        width: 300, // for colorbar itself (control is wider)\n        height: 15,\n        margin: 15,\n        background: '#fff',\n        textColor: 'black',\n        steps: 100,\n        decimals: 2,\n        units: 'uds', // ej: m/s\n        title: 'Legend', // ej: Ocean Currents\n        labels: [], // empty for no labels\n        textLabels: [], // empty for default labels. Custom labels ej: ['low', 'mid','high'] \n        labelFontSize: 10,\n        labelTextPosition: 'middle' // start | middle | end\n    },\n\n    initialize: function (color, range, options) {\n        this.color = color; // 'chromajs' scale function\n        this.range = range; // [min, max]\n        L.Util.setOptions(this, options);\n    },\n\n    onAdd: function (map) {\n        this._map = map;\n        let div = L.DomUtil.create(\n            'div',\n            'leaflet-control-colorBar leaflet-bar leaflet-control'\n        );\n        div.style.padding = '10px';\n\n        L.DomEvent\n            .addListener(div, 'click', L.DomEvent.stopPropagation)\n            .addListener(div, 'click', L.DomEvent.preventDefault);\n        div.style.backgroundColor = this.options.background;\n        div.style.cursor = 'text';\n        div.innerHTML = this.title() + this.palette();\n        return div;\n    },\n\n    title: function () {\n        let d = document.createElement('div');\n        d3\n            .select(d)\n            .append('span')\n            .style('color', this.options.textColor)\n            .style('display', 'block')\n            .style('margin-bottom', '5px')\n            .attr('class', 'leaflet-control-colorBar-title')\n            .text(this.options.title);\n        return d.innerHTML;\n    },\n\n    palette: function () {\n        let d = document.createElement('div');\n        let svg = this._createSvgIn(d);\n\n        this._appendColorBarTo(svg);\n\n        if (this.options.labels) {\n            this._appendLabelsTo(svg);\n        }\n\n        return d.innerHTML;\n    },\n\n    _createSvgIn: function (d) {\n        let spaceForLabels = this.options.labels ? this.options.margin : 0;\n        let svg = d3\n            .select(d)\n            .append('svg')\n            .attr('width', this.options.width + this.options.margin * 2)\n            .attr('height', this.options.height + spaceForLabels);\n        return svg;\n    },\n\n    _appendColorBarTo: function (svg) {\n        const colorPerValue = this._getColorPerValue();\n        const w = this.options.width / colorPerValue.length;\n\n        let groupBars = svg.append('g').attr('id', 'colorBar-buckets');\n        let buckets = groupBars\n            .selectAll('rect')\n            .data(colorPerValue)\n            .enter()\n            .append('rect');\n        buckets\n            .attr('x', (d, i) => i * w + this.options.margin)\n            .attr('y', () => 0)\n            .attr('height', () => this.options.height /*w * 4*/ )\n            .attr('width', () => w)\n            .attr('stroke-width', 2)\n            .attr('stroke-linecap', 'butt')\n            .attr('stroke', d => d.color.hex())\n            .attr('fill', d => d.color.hex());\n        buckets\n            .append('title')\n            .text(\n                d =>\n                    `${d.value.toFixed(this.options.decimals)} ${this.options\n                        .units}`\n            );\n    },\n\n    _appendLabelsTo: function (svg) {\n        const positionPerLabelValue = this._getPositionPerLabelValue();\n        //const w = this.options.width / colorPerValue.length;\n        let groupLabels = svg.append('g').attr('id', 'colorBar-labels');\n        let labels = groupLabels\n            .selectAll('text')\n            .data(positionPerLabelValue)\n            .enter()\n            .append('text');\n        labels\n            .attr('x', d => d.position + this.options.margin)\n            .attr('y', this.options.height + this.options.margin)\n            .attr('font-size', `${this.options.labelFontSize}px`)\n            .attr('text-anchor', this.options.labelTextPosition)\n            .attr('fill', this.options.textColor)\n            .attr('class', 'leaflet-control-colorBar-label')\n            .text(d => this.options.textLabels ? d.label : `${d.value.toFixed(this.options.decimals)}`);\n    },\n\n    _getColorPerValue: function () {\n        const [min, max] = this.range;\n        let delta = (max - min) / this.options.steps;\n        let data = d3.range(min, max + delta, delta);\n        let colorPerValue = data.map(d => {\n            return {\n                value: d,\n                color: this.color(d)\n            };\n        });\n        return colorPerValue;\n    },\n\n    _getPositionPerLabelValue: function () {\n        var xPositionFor = d3\n            .scaleLinear()\n            .range([0, this.options.width])\n            .domain(this.range);\n        let data = this.options.labels;\n        let positionPerLabel = data.map((d, index) => {\n            return {\n                label: this.options.textLabels ? this.options.textLabels[index] : '',\n                value: d,\n                position: xPositionFor(d)\n            };\n        });\n        return positionPerLabel;\n    }\n});\n\nL.control.colorBar = function (color, range, options) {\n    return new L.Control.ColorBar(color, range, options);\n};","/**\n *  Simple regular cell in a raster\n */\nexport default class Cell {\n    /**\n     * A simple cell with a numerical value\n     * @param {L.LatLng} center\n     * @param {Number|Vector} value\n     * @param {Number} xSize\n     * @param {Number} ySize\n     */\n    constructor(center, value, xSize, ySize = xSize) {\n        this.center = center;\n        this.value = value;\n        this.xSize = xSize;\n        this.ySize = ySize;\n    }\n\n    equals(anotherCell) {\n        return (\n            this.center.equals(anotherCell.center) &&\n            this._equalValues(this.value, anotherCell.value) &&\n            this.xSize === anotherCell.xSize &&\n            this.ySize === anotherCell.ySize\n        );\n    }\n\n    _equalValues(value, anotherValue) {\n        let type = value.constructor.name;\n        let answerFor = {\n            Number: value === anotherValue,\n            Vector: value.u === anotherValue.u && value.v === anotherValue.v\n        };\n        return answerFor[type];\n    }\n\n    /**\n     * Bounds for the cell\n     * @returns {LatLngBounds}\n     */\n    getBounds() {\n        let halfX = this.xSize / 2.0;\n        let halfY = this.ySize / 2.0;\n        let cLat = this.center.lat;\n        let cLng = this.center.lng;\n        let ul = L.latLng([cLat + halfY, cLng - halfX]);\n        let lr = L.latLng([cLat - halfY, cLng + halfX]);\n\n        return L.latLngBounds(\n            L.latLng(lr.lat, ul.lng),\n            L.latLng(ul.lat, lr.lng)\n        );\n    }\n}\n","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","import limit from './limit.js';\n\nexport default (rgb) => {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (let i = 0; i <= 3; i++) {\n        if (i < 3) {\n            if (rgb[i] < 0 || rgb[i] > 255) rgb._clipped = true;\n            rgb[i] = limit(rgb[i], 0, 255);\n        } else if (i === 3) {\n            rgb[i] = limit(rgb[i], 0, 1);\n        }\n    }\n    return rgb;\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","import type from './type.js';\n\nexport default (args) => {\n    if (args.length < 2) return null;\n    const l = args.length - 1;\n    if (type(args[l]) == 'string') return args[l].toLowerCase();\n    return null;\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","export default {\n    format: {},\n    autodetect: []\n};\n","import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\n\nclass Color {\n    constructor(...args) {\n        const me = this;\n        if (\n            type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor\n        ) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n        if (!mode) {\n            autodetect = true;\n\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n                _input.sorted = true;\n            }\n\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(\n                null,\n                autodetect ? args : args.slice(0, -1)\n            );\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: ' + args);\n        }\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n}\nexport default Color;\n","import Color from './Color.js';\nimport { version } from './version.js';\n\nconst chroma = (...args) => {\n    return new Color(...args);\n};\n\nchroma.version = version;\n\nexport default chroma;\n","// this gets updated automatically\nexport const version = '3.1.2';\n","/**\n\tX11 color names\n\n\thttp://www.w3.org/TR/css3-color/#svg-color\n*/\n\nconst w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\n\nexport default w3cx11;\n","const RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\nconst RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\nconst hex2rgb = (hex) => {\n    if (hex.match(RE_HEX)) {\n        // remove optional leading #\n        if (hex.length === 4 || hex.length === 7) {\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full six-digit\n        if (hex.length === 3) {\n            hex = hex.split('');\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        const u = parseInt(hex, 16);\n        const r = u >> 16;\n        const g = (u >> 8) & 0xff;\n        const b = u & 0xff;\n        return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n        if (hex.length === 5 || hex.length === 9) {\n            // remove optional leading #\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full eight-digit\n        if (hex.length === 4) {\n            hex = hex.split('');\n            hex =\n                hex[0] +\n                hex[0] +\n                hex[1] +\n                hex[1] +\n                hex[2] +\n                hex[2] +\n                hex[3] +\n                hex[3];\n        }\n        const u = parseInt(hex, 16);\n        const r = (u >> 24) & 0xff;\n        const g = (u >> 16) & 0xff;\n        const b = (u >> 8) & 0xff;\n        const a = Math.round(((u & 0xff) / 0xff) * 100) / 100;\n        return [r, g, b, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(`unknown hex color: ${hex}`);\n};\n\nexport default hex2rgb;\n","import { unpack, last } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2hex = (...args) => {\n    let [r, g, b, a] = unpack(args, 'rgba');\n    let mode = last(args) || 'auto';\n    if (a === undefined) a = 1;\n    if (mode === 'auto') {\n        mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round(r);\n    g = round(g);\n    b = round(b);\n    const u = (r << 16) | (g << 8) | b;\n    let str = '000000' + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    let hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n        case 'rgba':\n            return `#${str}${hxa}`;\n        case 'argb':\n            return `#${hxa}${str}`;\n        default:\n            return `#${str}`;\n    }\n};\n\nexport default rgb2hex;\n","import Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport w3cx11 from '../../colors/w3cx11.js';\nimport hex2rgb from '../hex/hex2rgb.js';\nimport rgb2hex from '../hex/rgb2hex.js';\n\nColor.prototype.name = function () {\n    const hex = rgb2hex(this._rgb, 'rgb');\n    for (let n of Object.keys(w3cx11)) {\n        if (w3cx11[n] === hex) return n.toLowerCase();\n    }\n    return hex;\n};\n\ninput.format.named = (name) => {\n    name = name.toLowerCase();\n    if (w3cx11[name]) return hex2rgb(w3cx11[name]);\n    throw new Error('unknown color name: ' + name);\n};\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && w3cx11[h.toLowerCase()]) {\n            return 'named';\n        }\n    }\n});\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.alpha = function (a, mutate = false) {\n    if (a !== undefined && type(a) === 'number') {\n        if (mutate) {\n            this._rgb[3] = a;\n            return this;\n        }\n        return new Color([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n    return this._rgb[3];\n};\n","import Color from '../Color.js';\n\nColor.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n};\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lab2rgb from './lab2rgb.js';\nimport rgb2lab from './rgb2lab.js';\nimport { getLabWhitePoint, setLabWhitePoint } from './lab-constants.js';\n\nColor.prototype.lab = function () {\n    return rgb2lab(this._rgb);\n};\n\nconst lab = (...args) => new Color(...args, 'lab');\nObject.assign(chroma, { lab, getLabWhitePoint, setLabWhitePoint });\n\ninput.format.lab = lab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'lab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'lab';\n        }\n    }\n});\n\nexport { lab, getLabWhitePoint, setLabWhitePoint };\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.darken = function (amount = 1) {\n    const me = this;\n    const lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return new Color(lab, 'lab').alpha(me.alpha(), true);\n};\n\nColor.prototype.brighten = function (amount = 1) {\n    return this.darken(-amount);\n};\n\nColor.prototype.darker = Color.prototype.darken;\nColor.prototype.brighter = Color.prototype.brighten;\n","import Color from '../Color.js';\n\nColor.prototype.get = function (mc) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) return src[i];\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nconst { pow } = Math;\n\nconst EPS = 1e-7;\nconst MAX_ITER = 20;\n\nColor.prototype.luminance = function (lum, mode = 'rgb') {\n    if (lum !== undefined && type(lum) === 'number') {\n        if (lum === 0) {\n            // return pure black\n            return new Color([0, 0, 0, this._rgb[3]], 'rgb');\n        }\n        if (lum === 1) {\n            // return pure white\n            return new Color([255, 255, 255, this._rgb[3]], 'rgb');\n        }\n        // compute new color using...\n        let cur_lum = this.luminance();\n        let max_iter = MAX_ITER;\n\n        const test = (low, high) => {\n            const mid = low.interpolate(high, 0.5, mode);\n            const lm = mid.luminance();\n            if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                // close enough\n                return mid;\n            }\n            return lm > lum ? test(low, mid) : test(mid, high);\n        };\n\n        const rgb = (\n            cur_lum > lum\n                ? test(new Color([0, 0, 0]), this)\n                : test(this, new Color([255, 255, 255]))\n        ).rgb();\n        return new Color([...rgb, this._rgb[3]]);\n    }\n    return rgb2luminance(...this._rgb.slice(0, 3));\n};\n\nconst rgb2luminance = (r, g, b) => {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n\nconst luminance_x = (x) => {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\n};\n","export default {};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nimport interpolator from '../interpolator/index.js';\n\nexport default (col1, col2, f = 0.5, ...rest) => {\n    let mode = rest[0] || 'lrgb';\n    if (!interpolator[mode] && !rest.length) {\n        // fall back to the first supported mode\n        mode = Object.keys(interpolator)[0];\n    }\n    if (!interpolator[mode]) {\n        throw new Error(`interpolation mode ${mode} is not defined`);\n    }\n    if (type(col1) !== 'object') col1 = new Color(col1);\n    if (type(col2) !== 'object') col2 = new Color(col2);\n    return interpolator[mode](col1, col2, f).alpha(\n        col1.alpha() + f * (col2.alpha() - col1.alpha())\n    );\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.mix = Color.prototype.interpolate = function (\n    col2,\n    f = 0.5,\n    ...rest\n) {\n    return mix(this, col2, f, ...rest);\n};\n","import Color from '../Color.js';\n\nColor.prototype.premultiply = function (mutate = false) {\n    const rgb = this._rgb;\n    const a = rgb[3];\n    if (mutate) {\n        this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n        return this;\n    } else {\n        return new Color([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n};\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from './lch2lab.js';\nimport lab2rgb from '../lab/lab2rgb.js';\n\nconst lch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = lab2rgb(L, a, b_);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default lch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lab2lch from './lab2lch.js';\n\nconst rgb2lch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2lab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2lch;\n","import { unpack, type, reverse3 } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lch2rgb from './lch2rgb.js';\nimport hcl2rgb from './hcl2rgb.js';\nimport rgb2lch from './rgb2lch.js';\n\nColor.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n};\nColor.prototype.hcl = function () {\n    return reverse3(rgb2lch(this._rgb));\n};\n\nconst lch = (...args) => new Color(...args, 'lch');\nconst hcl = (...args) => new Color(...args, 'hcl');\n\nObject.assign(chroma, { lch, hcl });\n\ninput.format.lch = lch2rgb;\ninput.format.hcl = hcl2rgb;\n['lch', 'hcl'].forEach((m) =>\n    input.autodetect.push({\n        p: 2,\n        test: (...args) => {\n            args = unpack(args, m);\n            if (type(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    })\n);\n\nexport { lch, hcl };\n","import { unpack, reverse3 } from '../../utils/index.js';\nimport lch2rgb from './lch2rgb.js';\n\nconst hcl2rgb = (...args) => {\n    const hcl = reverse3(unpack(args, 'hcl'));\n    return lch2rgb(...hcl);\n};\n\nexport default hcl2rgb;\n","import '../io/lch/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.saturate = function (amount = 1) {\n    const me = this;\n    const lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n    if (lch[1] < 0) lch[1] = 0;\n    return new Color(lch, 'lch').alpha(me.alpha(), true);\n};\n\nColor.prototype.desaturate = function (amount = 1) {\n    return this.saturate(-amount);\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.set = function (mc, value, mutate = false) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) {\n            if (type(value) == 'string') {\n                switch (value.charAt(0)) {\n                    case '+':\n                        src[i] += +value;\n                        break;\n                    case '-':\n                        src[i] += +value;\n                        break;\n                    case '*':\n                        src[i] *= +value.substr(1);\n                        break;\n                    case '/':\n                        src[i] /= +value.substr(1);\n                        break;\n                    default:\n                        src[i] = +value;\n                }\n            } else if (type(value) === 'number') {\n                src[i] = value;\n            } else {\n                throw new Error(`unsupported value for Color.set`);\n            }\n            const out = new Color(src, mode);\n            if (mutate) {\n                this._rgb = out._rgb;\n                return this;\n            }\n            return out;\n        }\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.tint = function (f = 0.5, ...rest) {\n    return mix(this, 'white', f, ...rest);\n};\n\nColor.prototype.shade = function (f = 0.5, ...rest) {\n    return mix(this, 'black', f, ...rest);\n};\n","import Color from '../Color.js';\nimport index from './index.js';\n\nconst rgb = (col1, col2, f) => {\n    const xyz0 = col1._rgb;\n    const xyz1 = col2._rgb;\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.rgb = rgb;\n\nexport default rgb;\n","import Color from '../Color.js';\nconst { sqrt, pow } = Math;\nimport index from './index.js';\n\nconst lrgb = (col1, col2, f) => {\n    const [x1, y1, z1] = col1._rgb;\n    const [x2, y2, z2] = col2._rgb;\n    return new Color(\n        sqrt(pow(x1, 2) * (1 - f) + pow(x2, 2) * f),\n        sqrt(pow(y1, 2) * (1 - f) + pow(y2, 2) * f),\n        sqrt(pow(z1, 2) * (1 - f) + pow(z2, 2) * f),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.lrgb = lrgb;\n\nexport default lrgb;\n","import '../io/lab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst lab = (col1, col2, f) => {\n    const xyz0 = col1.lab();\n    const xyz1 = col2.lab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'lab'\n    );\n};\n\n// register interpolator\nindex.lab = lab;\n\nexport default lab;\n","import Color from '../Color.js';\n\nexport default (col1, col2, f, m) => {\n    let xyz0, xyz1;\n    if (m === 'hsl') {\n        xyz0 = col1.hsl();\n        xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n        xyz0 = col1.hsv();\n        xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n        xyz0 = col1.hcg();\n        xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n        xyz0 = col1.hsi();\n        xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n        m = 'hcl';\n        xyz0 = col1.hcl();\n        xyz1 = col2.hcl();\n    } else if (m === 'oklch') {\n        xyz0 = col1.oklch().reverse();\n        xyz1 = col2.oklch().reverse();\n    }\n\n    let hue0, hue1, sat0, sat1, lbv0, lbv1;\n    if (m.substr(0, 1) === 'h' || m === 'oklch') {\n        [hue0, sat0, lbv0] = xyz0;\n        [hue1, sat1, lbv1] = xyz1;\n    }\n\n    let sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n        // both colors have hue\n        if (hue1 > hue0 && hue1 - hue0 > 180) {\n            dh = hue1 - (hue0 + 360);\n        } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n            dh = hue1 + 360 - hue0;\n        } else {\n            dh = hue1 - hue0;\n        }\n        hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n        hue = hue0;\n        if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') sat = sat0;\n    } else if (!isNaN(hue1)) {\n        hue = hue1;\n        if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') sat = sat1;\n    } else {\n        hue = Number.NaN;\n    }\n\n    if (sat === undefined) sat = sat0 + f * (sat1 - sat0);\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return m === 'oklch'\n        ? new Color([lbv, sat, hue], m)\n        : new Color([hue, sat, lbv], m);\n};\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst lch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'lch');\n};\n\n// register interpolator\nindex.lch = lch;\nindex.hcl = lch;\n\nexport default lch;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\nimport num2rgb from './num2rgb.js';\nimport rgb2num from './rgb2num.js';\n\nColor.prototype.num = function () {\n    return rgb2num(this._rgb);\n};\n\nconst num = (...args) => new Color(...args, 'num');\n\nObject.assign(chroma, { num });\n\ninput.format.num = num2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (...args) => {\n        if (\n            args.length === 1 &&\n            type(args[0]) === 'number' &&\n            args[0] >= 0 &&\n            args[0] <= 0xffffff\n        ) {\n            return 'num';\n        }\n    }\n});\n\nexport { num };\n","import { unpack } from '../../utils/index.js';\n\nconst rgb2num = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    return (r << 16) + (g << 8) + b;\n};\n\nexport default rgb2num;\n","import { type } from '../../utils/index.js';\n\nconst num2rgb = (num) => {\n    if (type(num) == 'number' && num >= 0 && num <= 0xffffff) {\n        const r = num >> 16;\n        const g = (num >> 8) & 0xff;\n        const b = num & 0xff;\n        return [r, g, b, 1];\n    }\n    throw new Error('unknown num color: ' + num);\n};\n\nexport default num2rgb;\n","import '../io/num/index.js';\nimport index from './index.js';\n\nimport Color from '../Color.js';\n\nconst num = (col1, col2, f) => {\n    const c1 = col1.num();\n    const c2 = col2.num();\n    return new Color(c1 + f * (c2 - c1), 'num');\n};\n\n// register interpolator\nindex.num = num;\n\nexport default num;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\n/*\n * this is basically just HSV with some minor tweaks\n *\n * hue.. [0..360]\n * chroma .. [0..1]\n * grayness .. [0..1]\n */\n\nconst hcg2rgb = (...args) => {\n    args = unpack(args, 'hcg');\n    let [h, c, _g] = args;\n    let r, g, b;\n    _g = _g * 255;\n    const _c = c * 255;\n    if (c === 0) {\n        r = g = b = _g;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n        const i = floor(h);\n        const f = h - i;\n        const p = _g * (1 - c);\n        const q = p + _c * (1 - f);\n        const t = p + _c * f;\n        const v = p + _c;\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hcg2rgb;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hcg2rgb from './hcg2rgb.js';\nimport rgb2hcg from './rgb2hcg.js';\n\nColor.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n};\n\nconst hcg = (...args) => new Color(...args, 'hcg');\nchroma.hcg = hcg;\n\ninput.format.hcg = hcg2rgb;\n\ninput.autodetect.push({\n    p: 1,\n    test: (...args) => {\n        args = unpack(args, 'hcg');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hcg';\n        }\n    }\n});\n\nexport { hcg };\n","import { unpack, max, min } from '../../utils/index.js';\n\nconst rgb2hcg = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n    const delta = maxRgb - minRgb;\n    const c = (delta * 100) / 255;\n    const _g = (minRgb / (255 - delta)) * 100;\n    let h;\n    if (delta === 0) {\n        h = Number.NaN;\n    } else {\n        if (r === maxRgb) h = (g - b) / delta;\n        if (g === maxRgb) h = 2 + (b - r) / delta;\n        if (b === maxRgb) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, c, _g];\n};\n\nexport default rgb2hcg;\n","import '../io/hcg/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hcg = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hcg');\n};\n\n// register interpolator\nindex.hcg = hcg;\n\nexport default hcg;\n","import { unpack, limit, TWOPI, PITHIRD } from '../../utils/index.js';\nconst { cos } = Math;\n\n/*\n * hue [0..360]\n * saturation [0..1]\n * intensity [0..1]\n */\nconst hsi2rgb = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n    args = unpack(args, 'hsi');\n    let [h, s, i] = args;\n    let r, g, b;\n\n    if (isNaN(h)) h = 0;\n    if (isNaN(s)) s = 0;\n    // normalize hue\n    if (h > 360) h -= 360;\n    if (h < 0) h += 360;\n    h /= 360;\n    if (h < 1 / 3) {\n        b = (1 - s) / 3;\n        r = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n        h -= 1 / 3;\n        r = (1 - s) / 3;\n        g = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        b = 1 - (r + g);\n    } else {\n        h -= 2 / 3;\n        g = (1 - s) / 3;\n        b = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsi2rgb;\n","import { unpack, TWOPI } from '../../utils/index.js';\nconst { min, sqrt, acos } = Math;\n\nconst rgb2hsi = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n    let [r, g, b] = unpack(args, 'rgb');\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h;\n    const min_ = min(r, g, b);\n    const i = (r + g + b) / 3;\n    const s = i > 0 ? 1 - min_ / i : 0;\n    if (s === 0) {\n        h = NaN;\n    } else {\n        h = (r - g + (r - b)) / 2;\n        h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n        h = acos(h);\n        if (b > g) {\n            h = TWOPI - h;\n        }\n        h /= TWOPI;\n    }\n    return [h * 360, s, i];\n};\n\nexport default rgb2hsi;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsi2rgb from './hsi2rgb.js';\nimport rgb2hsi from './rgb2hsi.js';\n\nColor.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n};\n\nconst hsi = (...args) => new Color(...args, 'hsi');\nchroma.hsi = hsi;\n\ninput.format.hsi = hsi2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsi');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsi';\n        }\n    }\n});\n\nexport { hsi };\n","import '../io/hsi/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsi = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsi');\n};\n\n// register interpolator\nindex.hsi = hsi;\n\nexport default hsi;\n","import { unpack } from '../../utils/index.js';\n\nconst hsl2rgb = (...args) => {\n    args = unpack(args, 'hsl');\n    const [h, s, l] = args;\n    let r, g, b;\n    if (s === 0) {\n        r = g = b = l * 255;\n    } else {\n        const t3 = [0, 0, 0];\n        const c = [0, 0, 0];\n        const t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const t1 = 2 * l - t2;\n        const h_ = h / 360;\n        t3[0] = h_ + 1 / 3;\n        t3[1] = h_;\n        t3[2] = h_ - 1 / 3;\n        for (let i = 0; i < 3; i++) {\n            if (t3[i] < 0) t3[i] += 1;\n            if (t3[i] > 1) t3[i] -= 1;\n            if (6 * t3[i] < 1) c[i] = t1 + (t2 - t1) * 6 * t3[i];\n            else if (2 * t3[i] < 1) c[i] = t2;\n            else if (3 * t3[i] < 2) c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n            else c[i] = t1;\n        }\n        [r, g, b] = [c[0] * 255, c[1] * 255, c[2] * 255];\n    }\n    if (args.length > 3) {\n        // keep alpha channel\n        return [r, g, b, args[3]];\n    }\n    return [r, g, b, 1];\n};\n\nexport default hsl2rgb;\n","import { unpack, min, max } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - rgb2hsl(r,g,b)\n * - rgb2hsl(r,g,b,a)\n * - rgb2hsl([r,g,b])\n * - rgb2hsl([r,g,b,a])\n * - rgb2hsl({r,g,b,a})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgba');\n    let [r, g, b] = args;\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n\n    const l = (maxRgb + minRgb) / 2;\n    let s, h;\n\n    if (maxRgb === minRgb) {\n        s = 0;\n        h = Number.NaN;\n    } else {\n        s =\n            l < 0.5\n                ? (maxRgb - minRgb) / (maxRgb + minRgb)\n                : (maxRgb - minRgb) / (2 - maxRgb - minRgb);\n    }\n\n    if (r == maxRgb) h = (g - b) / (maxRgb - minRgb);\n    else if (g == maxRgb) h = 2 + (b - r) / (maxRgb - minRgb);\n    else if (b == maxRgb) h = 4 + (r - g) / (maxRgb - minRgb);\n\n    h *= 60;\n    if (h < 0) h += 360;\n    if (args.length > 3 && args[3] !== undefined) return [h, s, l, args[3]];\n    return [h, s, l];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsl2rgb from './hsl2rgb.js';\nimport rgb2hsl from './rgb2hsl.js';\n\nColor.prototype.hsl = function () {\n    return rgb2hsl(this._rgb);\n};\n\nconst hsl = (...args) => new Color(...args, 'hsl');\nchroma.hsl = hsl;\n\ninput.format.hsl = hsl2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsl');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsl';\n        }\n    }\n});\n\nexport { hsl };\n","import '../io/hsl/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsl = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsl');\n};\n\n// register interpolator\nindex.hsl = hsl;\n\nexport default hsl;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\nconst hsv2rgb = (...args) => {\n    args = unpack(args, 'hsv');\n    let [h, s, v] = args;\n    let r, g, b;\n    v *= 255;\n    if (s === 0) {\n        r = g = b = v;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n\n        const i = floor(h);\n        const f = h - i;\n        const p = v * (1 - s);\n        const q = v * (1 - s * f);\n        const t = v * (1 - s * (1 - f));\n\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsv2rgb;\n","import { unpack } from '../../utils/index.js';\nconst { min, max } = Math;\n\n/*\n * supported arguments:\n * - rgb2hsv(r,g,b)\n * - rgb2hsv([r,g,b])\n * - rgb2hsv({r,g,b})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgb');\n    let [r, g, b] = args;\n    const min_ = min(r, g, b);\n    const max_ = max(r, g, b);\n    const delta = max_ - min_;\n    let h, s, v;\n    v = max_ / 255.0;\n    if (max_ === 0) {\n        h = Number.NaN;\n        s = 0;\n    } else {\n        s = delta / max_;\n        if (r === max_) h = (g - b) / delta;\n        if (g === max_) h = 2 + (b - r) / delta;\n        if (b === max_) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, s, v];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsv2rgb from './hsv2rgb.js';\nimport rgb2hsv from './rgb2hsv.js';\n\nColor.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n};\n\nconst hsv = (...args) => new Color(...args, 'hsv');\nchroma.hsv = hsv;\n\ninput.format.hsv = hsv2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsv');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsv';\n        }\n    }\n});\n\nexport { hsv };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","import '../io/hsv/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsv = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsv');\n};\n\n// register interpolator\nindex.hsv = hsv;\n\nexport default hsv;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklab2rgb from './oklab2rgb.js';\nimport rgb2oklab from './rgb2oklab.js';\n\nColor.prototype.oklab = function () {\n    return rgb2oklab(this._rgb);\n};\n\nconst oklab = (...args) => new Color(...args, 'oklab');\nObject.assign(chroma, { oklab });\n\ninput.format.oklab = oklab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklab';\n        }\n    }\n});\n\nexport { oklab };\n","import '../io/oklab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst oklab = (col1, col2, f) => {\n    const xyz0 = col1.oklab();\n    const xyz1 = col2.oklab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'oklab'\n    );\n};\n\n// register interpolator\nindex.oklab = oklab;\n\nexport default oklab;\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst oklch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'oklch');\n};\n\n// register interpolator\nindex.oklch = oklch;\n\nexport default oklch;\n","import Color from '../Color.js';\nimport { clip_rgb } from '../utils/index.js';\n\nconst { pow, sqrt, PI, cos, sin, atan2 } = Math;\n\nexport default (colors, mode = 'lrgb', weights = null) => {\n    const l = colors.length;\n    if (!weights) weights = Array.from(new Array(l)).map(() => 1);\n    // normalize weights\n    const k =\n        l /\n        weights.reduce(function (a, b) {\n            return a + b;\n        });\n    weights.forEach((w, i) => {\n        weights[i] *= k;\n    });\n    // convert colors to Color objects\n    colors = colors.map((c) => new Color(c));\n    if (mode === 'lrgb') {\n        return _average_lrgb(colors, weights);\n    }\n    const first = colors.shift();\n    const xyz = first.get(mode);\n    const cnt = [];\n    let dx = 0;\n    let dy = 0;\n    // initial color\n    for (let i = 0; i < xyz.length; i++) {\n        xyz[i] = (xyz[i] || 0) * weights[0];\n        cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n        if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n            const A = (xyz[i] / 180) * PI;\n            dx += cos(A) * weights[0];\n            dy += sin(A) * weights[0];\n        }\n    }\n\n    let alpha = first.alpha() * weights[0];\n    colors.forEach((c, ci) => {\n        const xyz2 = c.get(mode);\n        alpha += c.alpha() * weights[ci + 1];\n        for (let i = 0; i < xyz.length; i++) {\n            if (!isNaN(xyz2[i])) {\n                cnt[i] += weights[ci + 1];\n                if (mode.charAt(i) === 'h') {\n                    const A = (xyz2[i] / 180) * PI;\n                    dx += cos(A) * weights[ci + 1];\n                    dy += sin(A) * weights[ci + 1];\n                } else {\n                    xyz[i] += xyz2[i] * weights[ci + 1];\n                }\n            }\n        }\n    });\n\n    for (let i = 0; i < xyz.length; i++) {\n        if (mode.charAt(i) === 'h') {\n            let A = (atan2(dy / cnt[i], dx / cnt[i]) / PI) * 180;\n            while (A < 0) A += 360;\n            while (A >= 360) A -= 360;\n            xyz[i] = A;\n        } else {\n            xyz[i] = xyz[i] / cnt[i];\n        }\n    }\n    alpha /= l;\n    return new Color(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n};\n\nconst _average_lrgb = (colors, weights) => {\n    const l = colors.length;\n    const xyz = [0, 0, 0, 0];\n    for (let i = 0; i < colors.length; i++) {\n        const col = colors[i];\n        const f = weights[i] / l;\n        const rgb = col._rgb;\n        xyz[0] += pow(rgb[0], 2) * f;\n        xyz[1] += pow(rgb[1], 2) * f;\n        xyz[2] += pow(rgb[2], 2) * f;\n        xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 0.9999999) xyz[3] = 1;\n    return new Color(clip_rgb(xyz));\n};\n","// minimal multi-purpose interface\n\n// @requires utils color analyze\nimport chroma from '../chroma.js';\nimport { limit, type } from '../utils/index.js';\n\nconst { pow } = Math;\n\nexport default function (colors) {\n    // constructor\n    let _mode = 'rgb';\n    let _nacol = chroma('#ccc');\n    let _spread = 0;\n    // const _fixed = false;\n    let _domain = [0, 1];\n    let _pos = [];\n    let _padding = [0, 0];\n    let _classes = false;\n    let _colors = [];\n    let _out = false;\n    let _min = 0;\n    let _max = 1;\n    let _correctLightness = false;\n    let _colorCache = {};\n    let _useCache = true;\n    let _gamma = 1;\n\n    // private methods\n\n    const setColors = function (colors) {\n        colors = colors || ['#fff', '#000'];\n        if (\n            colors &&\n            type(colors) === 'string' &&\n            chroma.brewer &&\n            chroma.brewer[colors.toLowerCase()]\n        ) {\n            colors = chroma.brewer[colors.toLowerCase()];\n        }\n        if (type(colors) === 'array') {\n            // handle single color\n            if (colors.length === 1) {\n                colors = [colors[0], colors[0]];\n            }\n            // make a copy of the colors\n            colors = colors.slice(0);\n            // convert to chroma classes\n            for (let c = 0; c < colors.length; c++) {\n                colors[c] = chroma(colors[c]);\n            }\n            // auto-fill color position\n            _pos.length = 0;\n            for (let c = 0; c < colors.length; c++) {\n                _pos.push(c / (colors.length - 1));\n            }\n        }\n        resetCache();\n        return (_colors = colors);\n    };\n\n    const getClass = function (value) {\n        if (_classes != null) {\n            const n = _classes.length - 1;\n            let i = 0;\n            while (i < n && value >= _classes[i]) {\n                i++;\n            }\n            return i - 1;\n        }\n        return 0;\n    };\n\n    let tMapLightness = (t) => t;\n    let tMapDomain = (t) => t;\n\n    // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n    const getColor = function (val, bypassMap) {\n        let col, t;\n        if (bypassMap == null) {\n            bypassMap = false;\n        }\n        if (isNaN(val) || val === null) {\n            return _nacol;\n        }\n        if (!bypassMap) {\n            if (_classes && _classes.length > 2) {\n                // find the class\n                const c = getClass(val);\n                t = c / (_classes.length - 2);\n            } else if (_max !== _min) {\n                // just interpolate between min/max\n                t = (val - _min) / (_max - _min);\n            } else {\n                t = 1;\n            }\n        } else {\n            t = val;\n        }\n\n        // domain map\n        t = tMapDomain(t);\n\n        if (!bypassMap) {\n            t = tMapLightness(t); // lightness correction\n        }\n\n        if (_gamma !== 1) {\n            t = pow(t, _gamma);\n        }\n\n        t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n\n        t = limit(t, 0, 1);\n\n        const k = Math.floor(t * 10000);\n\n        if (_useCache && _colorCache[k]) {\n            col = _colorCache[k];\n        } else {\n            if (type(_colors) === 'array') {\n                //for i in [0.._pos.length-1]\n                for (let i = 0; i < _pos.length; i++) {\n                    const p = _pos[i];\n                    if (t <= p) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t >= p && i === _pos.length - 1) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t > p && t < _pos[i + 1]) {\n                        t = (t - p) / (_pos[i + 1] - p);\n                        col = chroma.interpolate(\n                            _colors[i],\n                            _colors[i + 1],\n                            t,\n                            _mode\n                        );\n                        break;\n                    }\n                }\n            } else if (type(_colors) === 'function') {\n                col = _colors(t);\n            }\n            if (_useCache) {\n                _colorCache[k] = col;\n            }\n        }\n        return col;\n    };\n\n    var resetCache = () => (_colorCache = {});\n\n    setColors(colors);\n\n    // public interface\n\n    const f = function (v) {\n        const c = chroma(getColor(v));\n        if (_out && c[_out]) {\n            return c[_out]();\n        } else {\n            return c;\n        }\n    };\n\n    f.classes = function (classes) {\n        if (classes != null) {\n            if (type(classes) === 'array') {\n                _classes = classes;\n                _domain = [classes[0], classes[classes.length - 1]];\n            } else {\n                const d = chroma.analyze(_domain);\n                if (classes === 0) {\n                    _classes = [d.min, d.max];\n                } else {\n                    _classes = chroma.limits(d, 'e', classes);\n                }\n            }\n            return f;\n        }\n        return _classes;\n    };\n\n    f.domain = function (domain) {\n        if (!arguments.length) {\n            return _domain;\n        }\n        _min = domain[0];\n        _max = domain[domain.length - 1];\n        _pos = [];\n        const k = _colors.length;\n        if (domain.length === k && _min !== _max) {\n            // update positions\n            for (let d of Array.from(domain)) {\n                _pos.push((d - _min) / (_max - _min));\n            }\n        } else {\n            for (let c = 0; c < k; c++) {\n                _pos.push(c / (k - 1));\n            }\n            if (domain.length > 2) {\n                // set domain map\n                const tOut = domain.map((d, i) => i / (domain.length - 1));\n                const tBreaks = domain.map((d) => (d - _min) / (_max - _min));\n                if (!tBreaks.every((val, i) => tOut[i] === val)) {\n                    tMapDomain = (t) => {\n                        if (t <= 0 || t >= 1) return t;\n                        let i = 0;\n                        while (t >= tBreaks[i + 1]) i++;\n                        const f =\n                            (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n                        const out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n                        return out;\n                    };\n                }\n            }\n        }\n        _domain = [_min, _max];\n        return f;\n    };\n\n    f.mode = function (_m) {\n        if (!arguments.length) {\n            return _mode;\n        }\n        _mode = _m;\n        resetCache();\n        return f;\n    };\n\n    f.range = function (colors, _pos) {\n        setColors(colors, _pos);\n        return f;\n    };\n\n    f.out = function (_o) {\n        _out = _o;\n        return f;\n    };\n\n    f.spread = function (val) {\n        if (!arguments.length) {\n            return _spread;\n        }\n        _spread = val;\n        return f;\n    };\n\n    f.correctLightness = function (v) {\n        if (v == null) {\n            v = true;\n        }\n        _correctLightness = v;\n        resetCache();\n        if (_correctLightness) {\n            tMapLightness = function (t) {\n                const L0 = getColor(0, true).lab()[0];\n                const L1 = getColor(1, true).lab()[0];\n                const pol = L0 > L1;\n                let L_actual = getColor(t, true).lab()[0];\n                const L_ideal = L0 + (L1 - L0) * t;\n                let L_diff = L_actual - L_ideal;\n                let t0 = 0;\n                let t1 = 1;\n                let max_iter = 20;\n                while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n                    (function () {\n                        if (pol) {\n                            L_diff *= -1;\n                        }\n                        if (L_diff < 0) {\n                            t0 = t;\n                            t += (t1 - t) * 0.5;\n                        } else {\n                            t1 = t;\n                            t += (t0 - t) * 0.5;\n                        }\n                        L_actual = getColor(t, true).lab()[0];\n                        return (L_diff = L_actual - L_ideal);\n                    })();\n                }\n                return t;\n            };\n        } else {\n            tMapLightness = (t) => t;\n        }\n        return f;\n    };\n\n    f.padding = function (p) {\n        if (p != null) {\n            if (type(p) === 'number') {\n                p = [p, p];\n            }\n            _padding = p;\n            return f;\n        } else {\n            return _padding;\n        }\n    };\n\n    f.colors = function (numColors, out) {\n        // If no arguments are given, return the original colors that were provided\n        if (arguments.length < 2) {\n            out = 'hex';\n        }\n        let result = [];\n\n        if (arguments.length === 0) {\n            result = _colors.slice(0);\n        } else if (numColors === 1) {\n            result = [f(0.5)];\n        } else if (numColors > 1) {\n            const dm = _domain[0];\n            const dd = _domain[1] - dm;\n            result = __range__(0, numColors, false).map((i) =>\n                f(dm + (i / (numColors - 1)) * dd)\n            );\n        } else {\n            // returns all colors based on the defined classes\n            colors = [];\n            let samples = [];\n            if (_classes && _classes.length > 2) {\n                for (\n                    let i = 1, end = _classes.length, asc = 1 <= end;\n                    asc ? i < end : i > end;\n                    asc ? i++ : i--\n                ) {\n                    samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n                }\n            } else {\n                samples = _domain;\n            }\n            result = samples.map((v) => f(v));\n        }\n\n        if (chroma[out]) {\n            result = result.map((c) => c[out]());\n        }\n        return result;\n    };\n\n    f.cache = function (c) {\n        if (c != null) {\n            _useCache = c;\n            return f;\n        } else {\n            return _useCache;\n        }\n    };\n\n    f.gamma = function (g) {\n        if (g != null) {\n            _gamma = g;\n            return f;\n        } else {\n            return _gamma;\n        }\n    };\n\n    f.nodata = function (d) {\n        if (d != null) {\n            _nacol = chroma(d);\n            return f;\n        } else {\n            return _nacol;\n        }\n    };\n\n    return f;\n}\n\nfunction __range__(left, right, inclusive) {\n    let range = [];\n    let ascending = left < right;\n    let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n    }\n    return range;\n}\n","//\n// interpolates between a set of colors uzing a bezier spline\n//\n\n// @requires utils lab\nimport Color from '../Color.js';\nimport '../io/lab/index.js';\nimport scale from './scale.js';\n\n// nth row of the pascal triangle\nconst binom_row = function (n) {\n    let row = [1, 1];\n    for (let i = 1; i < n; i++) {\n        let newrow = [1];\n        for (let j = 1; j <= row.length; j++) {\n            newrow[j] = (row[j] || 0) + row[j - 1];\n        }\n        row = newrow;\n    }\n    return row;\n};\n\nconst bezier = function (colors) {\n    let I, lab0, lab1, lab2;\n    colors = colors.map((c) => new Color(c));\n    if (colors.length === 2) {\n        // linear interpolation\n        [lab0, lab1] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map((i) => lab0[i] + t * (lab1[i] - lab0[i]));\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 3) {\n        // quadratic bezier interpolation\n        [lab0, lab1, lab2] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * lab0[i] +\n                    2 * (1 - t) * t * lab1[i] +\n                    t * t * lab2[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 4) {\n        // cubic bezier interpolation\n        let lab3;\n        [lab0, lab1, lab2, lab3] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * (1 - t) * lab0[i] +\n                    3 * (1 - t) * (1 - t) * t * lab1[i] +\n                    3 * (1 - t) * t * t * lab2[i] +\n                    t * t * t * lab3[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length >= 5) {\n        // general case (degree n bezier)\n        let labs, row, n;\n        labs = colors.map((c) => c.lab());\n        n = colors.length - 1;\n        row = binom_row(n);\n        I = function (t) {\n            const u = 1 - t;\n            const lab = [0, 1, 2].map((i) =>\n                labs.reduce(\n                    (sum, el, j) =>\n                        sum + row[j] * u ** (n - j) * t ** j * el[i],\n                    0\n                )\n            );\n            return new Color(lab, 'lab');\n        };\n    } else {\n        throw new RangeError('No point in running bezier with only one color.');\n    }\n    return I;\n};\n\nexport default (colors) => {\n    const f = bezier(colors);\n    f.scale = () => scale(f);\n    return f;\n};\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nconst { round } = Math;\n\nColor.prototype.rgb = function (rnd = true) {\n    if (rnd === false) return this._rgb.slice(0, 3);\n    return this._rgb.slice(0, 3).map(round);\n};\n\nColor.prototype.rgba = function (rnd = true) {\n    return this._rgb.slice(0, 4).map((v, i) => {\n        return i < 3 ? (rnd === false ? v : round(v)) : v;\n    });\n};\n\nconst rgb = (...args) => new Color(...args, 'rgb');\nObject.assign(chroma, { rgb });\n\ninput.format.rgb = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    if (rgba[3] === undefined) rgba[3] = 1;\n    return rgba;\n};\n\ninput.autodetect.push({\n    p: 3,\n    test: (...args) => {\n        args = unpack(args, 'rgba');\n        if (\n            type(args) === 'array' &&\n            (args.length === 3 ||\n                (args.length === 4 &&\n                    type(args[3]) == 'number' &&\n                    args[3] >= 0 &&\n                    args[3] <= 1))\n        ) {\n            return 'rgb';\n        }\n    }\n});\n\nexport { rgb };\n","/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from https://web.archive.org/web/20180110014946/http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nimport '../io/rgb/index.js';\nimport chroma from '../chroma.js';\n\nconst blend = (bottom, top, mode) => {\n    if (!blend[mode]) {\n        throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n};\n\nconst blend_f = (f) => (bottom, top) => {\n    const c0 = chroma(top).rgb();\n    const c1 = chroma(bottom).rgb();\n    return chroma.rgb(f(c0, c1));\n};\n\nconst each = (f) => (c0, c1) => {\n    const out = [];\n    out[0] = f(c0[0], c1[0]);\n    out[1] = f(c0[1], c1[1]);\n    out[2] = f(c0[2], c1[2]);\n    return out;\n};\n\nconst normal = (a) => a;\nconst multiply = (a, b) => (a * b) / 255;\nconst darken = (a, b) => (a > b ? b : a);\nconst lighten = (a, b) => (a > b ? a : b);\nconst screen = (a, b) => 255 * (1 - (1 - a / 255) * (1 - b / 255));\nconst overlay = (a, b) =>\n    b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\nconst burn = (a, b) => 255 * (1 - (1 - b / 255) / (a / 255));\nconst dodge = (a, b) => {\n    if (a === 255) return 255;\n    a = (255 * (b / 255)) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n};\n\n// # add = (a,b) ->\n// #     if (a + b > 255) then 255 else a + b\n\nblend.normal = blend_f(each(normal));\nblend.multiply = blend_f(each(multiply));\nblend.screen = blend_f(each(screen));\nblend.overlay = blend_f(each(overlay));\nblend.darken = blend_f(each(darken));\nblend.lighten = blend_f(each(lighten));\nblend.dodge = blend_f(each(dodge));\nblend.burn = blend_f(each(burn));\n// blend.add = blend_f(each(add));\n\nexport default blend;\n","// cubehelix interpolation\n// based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n// http://astron-soc.in/bulletin/11June/289392011.pdf\nimport { type, clip_rgb, TWOPI } from '../utils/index.js';\nimport chroma from '../chroma.js';\nconst { pow, sin, cos } = Math;\n\nexport default function (\n    start = 300,\n    rotations = -1.5,\n    hue = 1,\n    gamma = 1,\n    lightness = [0, 1]\n) {\n    let dh = 0,\n        dl;\n    if (type(lightness) === 'array') {\n        dl = lightness[1] - lightness[0];\n    } else {\n        dl = 0;\n        lightness = [lightness, lightness];\n    }\n    const f = function (fract) {\n        const a = TWOPI * ((start + 120) / 360 + rotations * fract);\n        const l = pow(lightness[0] + dl * fract, gamma);\n        const h = dh !== 0 ? hue[0] + fract * dh : hue;\n        const amp = (h * l * (1 - l)) / 2;\n        const cos_a = cos(a);\n        const sin_a = sin(a);\n        const r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n        const g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n        const b = l + amp * (+1.97294 * cos_a);\n        return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function (s) {\n        if (s == null) {\n            return start;\n        }\n        start = s;\n        return f;\n    };\n    f.rotations = function (r) {\n        if (r == null) {\n            return rotations;\n        }\n        rotations = r;\n        return f;\n    };\n    f.gamma = function (g) {\n        if (g == null) {\n            return gamma;\n        }\n        gamma = g;\n        return f;\n    };\n    f.hue = function (h) {\n        if (h == null) {\n            return hue;\n        }\n        hue = h;\n        if (type(hue) === 'array') {\n            dh = hue[1] - hue[0];\n            if (dh === 0) {\n                hue = hue[1];\n            }\n        } else {\n            dh = 0;\n        }\n        return f;\n    };\n    f.lightness = function (h) {\n        if (h == null) {\n            return lightness;\n        }\n        if (type(h) === 'array') {\n            lightness = h;\n            dl = h[1] - h[0];\n        } else {\n            lightness = [h, h];\n            dl = 0;\n        }\n        return f;\n    };\n    f.scale = () => chroma.scale(f);\n    f.hue(hue);\n    return f;\n}\n","import Color from '../Color.js';\nconst digits = '0123456789abcdef';\n\nconst { floor, random } = Math;\n\nexport default () => {\n    let code = '#';\n    for (let i = 0; i < 6; i++) {\n        code += digits.charAt(floor(random() * 16));\n    }\n    return new Color(code, 'hex');\n};\n","import type from './type.js';\n\nconst { log, pow, floor, abs } = Math;\n\nexport function analyze(data, key = null) {\n    const r = {\n        min: Number.MAX_VALUE,\n        max: Number.MAX_VALUE * -1,\n        sum: 0,\n        values: [],\n        count: 0\n    };\n    if (type(data) === 'object') {\n        data = Object.values(data);\n    }\n    data.forEach((val) => {\n        if (key && type(val) === 'object') val = val[key];\n        if (val !== undefined && val !== null && !isNaN(val)) {\n            r.values.push(val);\n            r.sum += val;\n            if (val < r.min) r.min = val;\n            if (val > r.max) r.max = val;\n            r.count += 1;\n        }\n    });\n\n    r.domain = [r.min, r.max];\n\n    r.limits = (mode, num) => limits(r, mode, num);\n\n    return r;\n}\n\nexport function limits(data, mode = 'equal', num = 7) {\n    if (type(data) == 'array') {\n        data = analyze(data);\n    }\n    const { min, max } = data;\n    const values = data.values.sort((a, b) => a - b);\n\n    if (num === 1) {\n        return [min, max];\n    }\n\n    const limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n        // continuous\n        limits.push(min);\n        limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n        // equal interval\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(min + (i / num) * (max - min));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n        // log scale\n        if (min <= 0) {\n            throw new Error(\n                'Logarithmic scales are only possible for values > 0'\n            );\n        }\n        const min_log = Math.LOG10E * log(min);\n        const max_log = Math.LOG10E * log(max);\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n        // quantile scale\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            const p = ((values.length - 1) * i) / num;\n            const pb = floor(p);\n            if (pb === p) {\n                limits.push(values[pb]);\n            } else {\n                // p > pb\n                const pr = p - pb;\n                limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n            }\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n        // k-means clustering\n        /*\n        implementation based on\n        http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n        simplified for 1-d input values\n        */\n        let cluster;\n        const n = values.length;\n        const assignments = new Array(n);\n        const clusterSizes = new Array(num);\n        let repeat = true;\n        let nb_iters = 0;\n        let centroids = null;\n\n        // get seed values\n        centroids = [];\n        centroids.push(min);\n        for (let i = 1; i < num; i++) {\n            centroids.push(min + (i / num) * (max - min));\n        }\n        centroids.push(max);\n\n        while (repeat) {\n            // assignment step\n            for (let j = 0; j < num; j++) {\n                clusterSizes[j] = 0;\n            }\n            for (let i = 0; i < n; i++) {\n                const value = values[i];\n                let mindist = Number.MAX_VALUE;\n                let best;\n                for (let j = 0; j < num; j++) {\n                    const dist = abs(centroids[j] - value);\n                    if (dist < mindist) {\n                        mindist = dist;\n                        best = j;\n                    }\n                    clusterSizes[best]++;\n                    assignments[i] = best;\n                }\n            }\n\n            // update centroids step\n            const newCentroids = new Array(num);\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] = null;\n            }\n            for (let i = 0; i < n; i++) {\n                cluster = assignments[i];\n                if (newCentroids[cluster] === null) {\n                    newCentroids[cluster] = values[i];\n                } else {\n                    newCentroids[cluster] += values[i];\n                }\n            }\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] *= 1 / clusterSizes[j];\n            }\n\n            // check convergence\n            repeat = false;\n            for (let j = 0; j < num; j++) {\n                if (newCentroids[j] !== centroids[j]) {\n                    repeat = true;\n                    break;\n                }\n            }\n\n            centroids = newCentroids;\n            nb_iters++;\n\n            if (nb_iters > 200) {\n                repeat = false;\n            }\n        }\n\n        // finished k-means clustering\n        // the next part is borrowed from gabrielflor.it\n        const kClusters = {};\n        for (let j = 0; j < num; j++) {\n            kClusters[j] = [];\n        }\n        for (let i = 0; i < n; i++) {\n            cluster = assignments[i];\n            kClusters[cluster].push(values[i]);\n        }\n        let tmpKMeansBreaks = [];\n        for (let j = 0; j < num; j++) {\n            tmpKMeansBreaks.push(kClusters[j][0]);\n            tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n        }\n        tmpKMeansBreaks = tmpKMeansBreaks.sort((a, b) => a - b);\n        limits.push(tmpKMeansBreaks[0]);\n        for (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n            const v = tmpKMeansBreaks[i];\n            if (!isNaN(v) && limits.indexOf(v) === -1) {\n                limits.push(v);\n            }\n        }\n    }\n    return limits;\n}\n","import Color from '../Color.js';\nimport '../ops/luminance.js';\n\nexport default (a, b) => {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.luminance();\n    const l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\n/**\n * @license\n *\n * The APCA contrast prediction algorithm is based of the formulas published\n * in the APCA-1.0.98G specification by Myndex. The specification is available at:\n * https://raw.githubusercontent.com/Myndex/apca-w3/master/images/APCAw3_0.1.17_APCA0.0.98G.svg\n *\n * Note that the APCA implementation is still beta, so please update to\n * future versions of chroma.js when they become available.\n *\n * You can read more about the APCA Readability Criterion at\n * https://readtech.org/ARC/\n */\n\n// constants\nconst W_offset = 0.027;\nconst P_in = 0.0005;\nconst P_out = 0.1;\nconst R_scale = 1.14;\nconst B_threshold = 0.022;\nconst B_exp = 1.414;\n\nexport default (text, bg) => {\n    // parse input colors\n    text = new Color(text);\n    bg = new Color(bg);\n    // if text color has alpha, blend against background\n    if (text.alpha() < 1) {\n        text = mix(bg, text, text.alpha(), 'rgb');\n    }\n    const l_text = lum(...text.rgb());\n    const l_bg = lum(...bg.rgb());\n\n    // soft clamp black levels\n    const Y_text =\n        l_text >= B_threshold\n            ? l_text\n            : l_text + Math.pow(B_threshold - l_text, B_exp);\n    const Y_bg =\n        l_bg >= B_threshold ? l_bg : l_bg + Math.pow(B_threshold - l_bg, B_exp);\n\n    // normal polarity (dark text on light background)\n    const S_norm = Math.pow(Y_bg, 0.56) - Math.pow(Y_text, 0.57);\n    // reverse polarity (light text on dark background)\n    const S_rev = Math.pow(Y_bg, 0.65) - Math.pow(Y_text, 0.62);\n    // clamp noise then scale\n    const C =\n        Math.abs(Y_bg - Y_text) < P_in\n            ? 0\n            : Y_text < Y_bg\n              ? S_norm * R_scale\n              : S_rev * R_scale;\n    // clamp minimum contrast then offset\n    const S_apc = Math.abs(C) < P_out ? 0 : C > 0 ? C - W_offset : C + W_offset;\n    // scale to 100\n    return S_apc * 100;\n};\n\nfunction lum(r, g, b) {\n    return (\n        0.2126729 * Math.pow(r / 255, 2.4) +\n        0.7151522 * Math.pow(g / 255, 2.4) +\n        0.072175 * Math.pow(b / 255, 2.4)\n    );\n}\n","import Color from '../Color.js';\nconst { sqrt, pow, min, max, atan2, abs, cos, sin, exp, PI } = Math;\n\nexport default function (a, b, Kl = 1, Kc = 1, Kh = 1) {\n    // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n    var rad2deg = function (rad) {\n        return (360 * rad) / (2 * PI);\n    };\n    var deg2rad = function (deg) {\n        return (2 * PI * deg) / 360;\n    };\n    a = new Color(a);\n    b = new Color(b);\n    const [L1, a1, b1] = Array.from(a.lab());\n    const [L2, a2, b2] = Array.from(b.lab());\n    const avgL = (L1 + L2) / 2;\n    const C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    const C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    const avgC = (C1 + C2) / 2;\n    const G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    const a1p = a1 * (1 + G);\n    const a2p = a2 * (1 + G);\n    const C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    const C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    const avgCp = (C1p + C2p) / 2;\n    const arctan1 = rad2deg(atan2(b1, a1p));\n    const arctan2 = rad2deg(atan2(b2, a2p));\n    const h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    const h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    const avgHp =\n        abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    const T =\n        1 -\n        0.17 * cos(deg2rad(avgHp - 30)) +\n        0.24 * cos(deg2rad(2 * avgHp)) +\n        0.32 * cos(deg2rad(3 * avgHp + 6)) -\n        0.2 * cos(deg2rad(4 * avgHp - 63));\n    let deltaHp = h2p - h1p;\n    deltaHp =\n        abs(deltaHp) <= 180\n            ? deltaHp\n            : h2p <= h1p\n              ? deltaHp + 360\n              : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    const deltaL = L2 - L1;\n    const deltaCp = C2p - C1p;\n    const sl = 1 + (0.015 * pow(avgL - 50, 2)) / sqrt(20 + pow(avgL - 50, 2));\n    const sc = 1 + 0.045 * avgCp;\n    const sh = 1 + 0.015 * avgCp * T;\n    const deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    const Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    const Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    const result = sqrt(\n        pow(deltaL / (Kl * sl), 2) +\n            pow(deltaCp / (Kc * sc), 2) +\n            pow(deltaHp / (Kh * sh), 2) +\n            Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh))\n    );\n    return max(0, min(100, result));\n}\n","// some pre-defined color scales:\nimport chroma from '../chroma.js';\nimport '../io/hsl/index.js';\nimport scale from '../generator/scale.js';\n\nexport default {\n    cool() {\n        return scale([chroma.hsl(180, 1, 0.9), chroma.hsl(250, 0.7, 0.4)]);\n    },\n    hot() {\n        return scale(['#000', '#f00', '#ff0', '#fff'], [0, 0.25, 0.75, 1]).mode(\n            'rgb'\n        );\n    }\n};\n","/**\n    ColorBrewer colors for chroma.js\n\n    Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n    Pennsylvania State University.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software distributed\n    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n    CONDITIONS OF ANY KIND, either express or implied. See the License for the\n    specific language governing permissions and limitations under the License.\n*/\n\nconst colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n};\n\nconst colorbrewerTypes = Object.keys(colorbrewer);\nconst typeMap = new Map(colorbrewerTypes.map((key) => [key.toLowerCase(), key]));\n\n// use Proxy to allow case-insensitive access to palettes\nconst colorbrewerProxy =\n    typeof Proxy === 'function'\n        ? new Proxy(colorbrewer, {\n              get(target, prop) {\n                  const lower = prop.toLowerCase();\n                  if (typeMap.has(lower)) {\n                      return target[typeMap.get(lower)];\n                  }\n              },\n              getOwnPropertyNames() {\n                  return Object.getOwnPropertyNames(colorbrewerTypes);\n              }\n          })\n        : colorbrewer;\n\nexport default colorbrewerProxy;\n","import { unpack } from '../../utils/index.js';\nconst { max } = Math;\n\nconst rgb2cmyk = (...args) => {\n    let [r, g, b] = unpack(args, 'rgb');\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    const k = 1 - max(r, max(g, b));\n    const f = k < 1 ? 1 / (1 - k) : 0;\n    const c = (1 - r - k) * f;\n    const m = (1 - g - k) * f;\n    const y = (1 - b - k) * f;\n    return [c, m, y, k];\n};\n\nexport default rgb2cmyk;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nimport cmyk2rgb from './cmyk2rgb.js';\nimport rgb2cmyk from './rgb2cmyk.js';\n\nColor.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n};\n\nconst cmyk = (...args) => new Color(...args, 'cmyk');\nObject.assign(chroma, { cmyk });\n\ninput.format.cmyk = cmyk2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'cmyk');\n        if (type(args) === 'array' && args.length === 4) {\n            return 'cmyk';\n        }\n    }\n});\n\nexport { cmyk };\n","import { unpack } from '../../utils/index.js';\n\nconst cmyk2rgb = (...args) => {\n    args = unpack(args, 'cmyk');\n    const [c, m, y, k] = args;\n    const alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) return [0, 0, 0, alpha];\n    return [\n        c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n        m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n        y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n        alpha\n    ];\n};\n\nexport default cmyk2rgb;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - hsl2css(h,s,l)\n * - hsl2css(h,s,l,a)\n * - hsl2css([h,s,l], mode)\n * - hsl2css([h,s,l,a], mode)\n * - hsl2css({h,s,l,a}, mode)\n */\nconst hsl2css = (...args) => {\n    const hsla = unpack(args, 'hsla');\n    let mode = last(args) || 'lsa';\n    hsla[0] = rnd2(hsla[0] || 0) + 'deg';\n    hsla[1] = rnd2(hsla[1] * 100) + '%';\n    hsla[2] = rnd2(hsla[2] * 100) + '%';\n    if (mode === 'hsla' || (hsla.length > 3 && hsla[3] < 1)) {\n        hsla[3] = '/ ' + (hsla.length > 3 ? hsla[3] : 1);\n        mode = 'hsla';\n    } else {\n        hsla.length = 3;\n    }\n    return `${mode.substr(0, 3)}(${hsla.join(' ')})`;\n};\n\nexport default hsl2css;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { unpack, last } from '../../utils/index.js';\nimport hsl2css from './hsl2css.js';\nimport rgb2hsl from '../hsl/rgb2hsl.js';\nimport lab2css from './lab2css.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lch2css from './lch2css.js';\nimport rgb2lch from '../lch/rgb2lch.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport oklab2css from './oklab2css.js';\nimport rgb2oklch from '../oklch/rgb2oklch.js';\nimport oklch2css from './oklch2css.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\nconst { round } = Math;\n\n/*\n * supported arguments:\n * - rgb2css(r,g,b)\n * - rgb2css(r,g,b,a)\n * - rgb2css([r,g,b], mode)\n * - rgb2css([r,g,b,a], mode)\n * - rgb2css({r,g,b,a}, mode)\n */\nconst rgb2css = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    let mode = last(args) || 'rgb';\n    if (mode.substr(0, 3) === 'hsl') {\n        return hsl2css(rgb2hsl(rgba), mode);\n    }\n    if (mode.substr(0, 3) === 'lab') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lab2css(rgb2lab(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 3) === 'lch') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lch2css(rgb2lch(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 5) === 'oklab') {\n        return oklab2css(rgb2oklab(rgba));\n    }\n    if (mode.substr(0, 5) === 'oklch') {\n        return oklch2css(rgb2oklch(rgba));\n    }\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n    if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {\n        rgba[3] = '/ ' + (rgba.length > 3 ? rgba[3] : 1);\n        mode = 'rgba';\n    }\n    return `${mode.substr(0, 3)}(${rgba.slice(0, mode === 'rgb' ? 3 : 4).join(' ')})`;\n};\n\nexport default rgb2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    let mode = last(args) || 'lab';\n    laba[0] = rnd2(laba[0]) + '%';\n    laba[1] = rnd2(laba[1]);\n    laba[2] = rnd2(laba[2]);\n    if (mode === 'laba' || (laba.length > 3 && laba[3] < 1)) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `lab(${laba.join(' ')})`;\n};\n\nexport default lab2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    let mode = last(args) || 'lab';\n    lcha[0] = rnd2(lcha[0]) + '%';\n    lcha[1] = rnd2(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (mode === 'lcha' || (lcha.length > 3 && lcha[3] < 1)) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `lch(${lcha.join(' ')})`;\n};\n\nexport default lch2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    laba[0] = rnd2(laba[0] * 100) + '%';\n    laba[1] = rnd3(laba[1]);\n    laba[2] = rnd3(laba[2]);\n    if (laba.length > 3 && laba[3] < 1) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `oklab(${laba.join(' ')})`;\n};\n\nexport default oklab2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    lcha[0] = rnd2(lcha[0] * 100) + '%';\n    lcha[1] = rnd3(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (lcha.length > 3 && lcha[3] < 1) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `oklch(${lcha.join(' ')})`;\n};\n\nexport default oklch2css;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import hsl2rgb from '../hsl/hsl2rgb.js';\nimport lab2rgb from '../lab/lab2rgb.js';\nimport lch2rgb from '../lch/lch2rgb.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\nimport oklch2rgb from '../oklch/oklch2rgb.js';\nimport input from '../input.js';\nimport limit from '../../utils/limit.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\n\nconst INT_OR_PCT = /((?:-?\\d+)|(?:-?\\d+(?:\\.\\d+)?)%|none)/.source;\nconst FLOAT_OR_PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%?)|none)/.source;\nconst PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%)|none)/.source;\nconst RE_S = /\\s*/.source;\nconst SEP = /\\s+/.source;\nconst COMMA = /\\s*,\\s*/.source;\nconst ANLGE = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:deg)?)|none)/.source;\nconst ALPHA = /\\s*(?:\\/\\s*((?:[01]|[01]?\\.\\d+)|\\d+(?:\\.\\d+)?%))?/.source;\n\n// e.g. rgb(250 20 0), rgb(100% 50% 20%), rgb(100% 50% 20% / 0.5)\nconst RE_RGB = new RegExp(\n    '^rgba?\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_RGB_LEGACY = new RegExp(\n    '^rgb\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\nconst RE_RGBA_LEGACY = new RegExp(\n    '^rgba\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT, FLOAT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\n\nconst RE_HSL = new RegExp(\n    '^hsla?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(SEP) + ALPHA + '\\\\)$'\n);\nconst RE_HSL_LEGACY = new RegExp(\n    '^hsl?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(COMMA) + RE_S + '\\\\)$'\n);\nconst RE_HSLA_LEGACY =\n    /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\nconst RE_LAB = new RegExp(\n    '^lab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_LCH = new RegExp(\n    '^lch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLAB = new RegExp(\n    '^oklab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLCH = new RegExp(\n    '^oklch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\n\nconst { round } = Math;\n\nconst roundRGB = (rgb) => {\n    return rgb.map((v, i) => (i <= 2 ? limit(round(v), 0, 255) : v));\n};\n\nconst percentToAbsolute = (pct, min = 0, max = 100, signed = false) => {\n    if (typeof pct === 'string' && pct.endsWith('%')) {\n        pct = parseFloat(pct.substring(0, pct.length - 1)) / 100;\n        if (signed) {\n            // signed percentages are in the range -100% to 100%\n            pct = min + (pct + 1) * 0.5 * (max - min);\n        } else {\n            pct = min + pct * (max - min);\n        }\n    }\n    return +pct;\n};\n\nconst noneToValue = (v, noneValue) => {\n    return v === 'none' ? noneValue : v;\n};\n\nconst css2rgb = (css) => {\n    css = css.toLowerCase().trim();\n\n    if (css === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n\n    let m;\n\n    if (input.format.named) {\n        try {\n            return input.format.named(css);\n            // eslint-disable-next-line\n        } catch (e) {}\n    }\n\n    // rgb(250 20 0) or rgb(250,20,0)\n    if ((m = css.match(RE_RGB)) || (m = css.match(RE_RGB_LEGACY))) {\n        let rgb = m.slice(1, 4);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = +percentToAbsolute(noneToValue(rgb[i], 0), 0, 255);\n        }\n        rgb = roundRGB(rgb);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha; // default alpha\n        return rgb;\n    }\n\n    // rgba(250,20,0,0.4)\n    if ((m = css.match(RE_RGBA_LEGACY))) {\n        const rgb = m.slice(1, 5);\n        for (let i = 0; i < 4; i++) {\n            rgb[i] = +percentToAbsolute(rgb[i], 0, 255);\n        }\n        return rgb;\n    }\n\n    // hsl(0,100%,50%)\n    if ((m = css.match(RE_HSL)) || (m = css.match(RE_HSL_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[0] = +noneToValue(hsl[0].replace('deg', ''), 0);\n        hsl[1] = +percentToAbsolute(noneToValue(hsl[1], 0), 0, 100) * 0.01;\n        hsl[2] = +percentToAbsolute(noneToValue(hsl[2], 0), 0, 100) * 0.01;\n        const rgb = roundRGB(hsl2rgb(hsl));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    // hsla(0,100%,50%,0.5)\n    if ((m = css.match(RE_HSLA_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[1] *= 0.01;\n        hsl[2] *= 0.01;\n        const rgb = hsl2rgb(hsl);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = round(rgb[i]);\n        }\n        rgb[3] = +m[4]; // default alpha = 1\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LAB))) {\n        const lab = m.slice(1, 4);\n        lab[0] = percentToAbsolute(noneToValue(lab[0], 0), 0, 100);\n        lab[1] = percentToAbsolute(noneToValue(lab[1], 0), -125, 125, true);\n        lab[2] = percentToAbsolute(noneToValue(lab[2], 0), -125, 125, true);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lab2rgb(lab));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LCH))) {\n        const lch = m.slice(1, 4);\n        lch[0] = percentToAbsolute(lch[0], 0, 100);\n        lch[1] = percentToAbsolute(noneToValue(lch[1], 0), 0, 150, false);\n        lch[2] = +noneToValue(lch[2].replace('deg', ''), 0);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lch2rgb(lch));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLAB))) {\n        const oklab = m.slice(1, 4);\n        oklab[0] = percentToAbsolute(noneToValue(oklab[0], 0), 0, 1);\n        oklab[1] = percentToAbsolute(noneToValue(oklab[1], 0), -0.4, 0.4, true);\n        oklab[2] = percentToAbsolute(noneToValue(oklab[2], 0), -0.4, 0.4, true);\n        const rgb = roundRGB(oklab2rgb(oklab));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLCH))) {\n        const oklch = m.slice(1, 4);\n        oklch[0] = percentToAbsolute(noneToValue(oklch[0], 0), 0, 1);\n        oklch[1] = percentToAbsolute(noneToValue(oklch[1], 0), 0, 0.4, false);\n        oklch[2] = +noneToValue(oklch[2].replace('deg', ''), 0);\n        const rgb = roundRGB(oklch2rgb(oklch));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n};\n\ncss2rgb.test = (s) => {\n    return (\n        // modern\n        RE_RGB.test(s) ||\n        RE_HSL.test(s) ||\n        RE_LAB.test(s) ||\n        RE_LCH.test(s) ||\n        RE_OKLAB.test(s) ||\n        RE_OKLCH.test(s) ||\n        // legacy\n        RE_RGB_LEGACY.test(s) ||\n        RE_RGBA_LEGACY.test(s) ||\n        RE_HSL_LEGACY.test(s) ||\n        RE_HSLA_LEGACY.test(s) ||\n        s === 'transparent'\n    );\n};\n\nexport default css2rgb;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport rgb2css from './rgb2css.js';\nimport css2rgb from './css2rgb.js';\n\nColor.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n};\n\nconst css = (...args) => new Color(...args, 'css');\nchroma.css = css;\n\ninput.format.css = css2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && css2rgb.test(h)) {\n            return 'css';\n        }\n    }\n});\n\nexport { css };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport input from '../input.js';\nimport { unpack } from '../../utils/index.js';\n\ninput.format.gl = (...args) => {\n    const rgb = unpack(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n};\n\nconst gl = (...args) => new Color(...args, 'gl');\nchroma.gl = gl;\n\nColor.prototype.gl = function () {\n    const rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n};\n\nexport { gl };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport { type } from '../../utils/index.js';\nimport input from '../input.js';\nimport hex2rgb from './hex2rgb.js';\nimport rgb2hex from './rgb2hex.js';\n\nColor.prototype.hex = function (mode) {\n    return rgb2hex(this._rgb, mode);\n};\n\nconst hex = (...args) => new Color(...args, 'hex');\nchroma.hex = hex;\n\ninput.format.hex = hex2rgb;\ninput.autodetect.push({\n    p: 4,\n    test: (h, ...rest) => {\n        if (\n            !rest.length &&\n            type(h) === 'string' &&\n            [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0\n        ) {\n            return 'hex';\n        }\n    }\n});\n\nexport { hex };\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n */\n\nconst { log } = Math;\n\nconst temperature2rgb = (kelvin) => {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n        r = 255;\n        g =\n            temp < 6\n                ? 0\n                : -155.25485562709179 -\n                  0.44596950469579133 * (g = temp - 2) +\n                  104.49216199393888 * log(g);\n        b =\n            temp < 20\n                ? 0\n                : -254.76935184120902 +\n                  0.8274096064007395 * (b = temp - 10) +\n                  115.67994401066147 * log(b);\n    } else {\n        r =\n            351.97690566805693 +\n            0.114206453784165 * (r = temp - 55) -\n            40.25366309332127 * log(r);\n        g =\n            325.4494125711974 +\n            0.07943456536662342 * (g = temp - 50) -\n            28.0852963507957 * log(g);\n        b = 255;\n    }\n    return [r, g, b, 1];\n};\n\nexport default temperature2rgb;\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n **/\n\nimport temperature2rgb from './temperature2rgb.js';\nimport { unpack } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2temperature = (...args) => {\n    const rgb = unpack(args, 'rgb');\n    const r = rgb[0],\n        b = rgb[2];\n    let minTemp = 1000;\n    let maxTemp = 40000;\n    const eps = 0.4;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n        temp = (maxTemp + minTemp) * 0.5;\n        const rgb = temperature2rgb(temp);\n        if (rgb[2] / rgb[0] >= b / r) {\n            maxTemp = temp;\n        } else {\n            minTemp = temp;\n        }\n    }\n    return round(temp);\n};\n\nexport default rgb2temperature;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport temperature2rgb from './temperature2rgb.js';\nimport rgb2temperature from './rgb2temperature.js';\n\nColor.prototype.temp =\n    Color.prototype.kelvin =\n    Color.prototype.temperature =\n        function () {\n            return rgb2temperature(this._rgb);\n        };\n\nconst temp = (...args) => new Color(...args, 'temp');\nObject.assign(chroma, { temp, kelvin: temp, temperature: temp });\n\ninput.format.temp =\n    input.format.kelvin =\n    input.format.temperature =\n        temperature2rgb;\n\nexport { temp, temp as kelvin, temp as temperature };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklch2rgb from './oklch2rgb.js';\nimport rgb2oklch from './rgb2oklch.js';\n\nColor.prototype.oklch = function () {\n    return rgb2oklch(this._rgb);\n};\n\nconst oklch = (...args) => new Color(...args, 'oklch');\nObject.assign(chroma, { oklch });\n\ninput.format.oklch = oklch2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklch');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklch';\n        }\n    }\n});\n\nexport { oklch };\n","// feel free to comment out anything to rollup\n// a smaller chroma.js bundle\nimport chroma from './src/chroma.js';\n\n// io --> convert colors\nimport './src/io/named/index.js';\n\n// operators --> modify existing Colors\nimport './src/ops/alpha.js';\nimport './src/ops/clipped.js';\nimport './src/ops/darken.js';\nimport './src/ops/get.js';\nimport './src/ops/luminance.js';\nimport './src/ops/mix.js';\nimport './src/ops/premultiply.js';\nimport './src/ops/saturate.js';\nimport './src/ops/set.js';\nimport './src/ops/shade.js';\n\n// interpolators\nimport './src/interpolator/rgb.js';\nimport './src/interpolator/lrgb.js';\nimport './src/interpolator/lab.js';\nimport './src/interpolator/lch.js';\nimport './src/interpolator/num.js';\nimport './src/interpolator/hcg.js';\nimport './src/interpolator/hsi.js';\nimport './src/interpolator/hsl.js';\nimport './src/interpolator/hsv.js';\nimport './src/interpolator/oklab.js';\nimport './src/interpolator/oklch.js';\n\n// generators -- > create new colors\nimport average from './src/generator/average.js';\nimport bezier from './src/generator/bezier.js';\nimport blend from './src/generator/blend.js';\nimport cubehelix from './src/generator/cubehelix.js';\nimport mix from './src/generator/mix.js';\nimport random from './src/generator/random.js';\nimport scale from './src/generator/scale.js';\n\n// other utility methods\nimport { analyze } from './src/utils/analyze.js';\nimport contrast from './src/utils/contrast.js';\nimport contrastAPCA from './src/utils/contrastAPCA.js';\nimport deltaE from './src/utils/delta-e.js';\nimport distance from './src/utils/distance.js';\nimport { limits } from './src/utils/analyze.js';\nimport valid from './src/utils/valid.js';\nimport input from './src/io/input.js';\n\n// scale\nimport scales from './src/utils/scales.js';\n\n// colors\nimport colors from './src/colors/w3cx11.js';\nimport brewer from './src/colors/colorbrewer.js';\nimport Color from './src/Color.js';\n\nObject.assign(chroma, {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    interpolate: mix,\n    limits,\n    mix,\n    random,\n    scale,\n    scales,\n    valid\n});\n\nexport default chroma;\n\nexport {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    limits,\n    mix,\n    mix as interpolate,\n    random,\n    scale,\n    scales,\n    valid\n};\n\nexport * from './src/io/cmyk/index.js';\nexport * from './src/io/css/index.js';\nexport * from './src/io/gl/index.js';\nexport * from './src/io/hcg/index.js';\nexport * from './src/io/hex/index.js';\nexport * from './src/io/hsi/index.js';\nexport * from './src/io/hsl/index.js';\nexport * from './src/io/hsv/index.js';\nexport * from './src/io/lab/index.js';\nexport * from './src/io/lch/index.js';\nexport * from './src/io/num/index.js';\nexport * from './src/io/rgb/index.js';\nexport * from './src/io/temp/index.js';\nexport * from './src/io/oklab/index.js';\nexport * from './src/io/oklch/index.js';\n","import Color from '../Color.js';\n\n// simple Euclidean distance\nexport default function (a, b, mode = 'lab') {\n    // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.get(mode);\n    const l2 = b.get(mode);\n    let sum_sq = 0;\n    for (let i in l1) {\n        const d = (l1[i] || 0) - (l2[i] || 0);\n        sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n}\n","import Color from '../Color.js';\n\nexport default (...args) => {\n    try {\n        new Color(...args);\n        return true;\n        // eslint-disable-next-line\n    } catch (e) {\n        return false;\n    }\n};\n","import Cell from '../Cell';\nimport chroma from 'chroma-js';\n/**\n * ScalarField on canvas (a 'Raster')\n */\nL.CanvasLayer.ScalarField = L.CanvasLayer.Field.extend({\n    options: {\n        type: 'colormap', // [colormap|vector]\n        color: null, // function colorFor(value) [e.g. chromajs.scale],\n        interpolate: false, // Change to use interpolation\n        vectorSize: 20, // only used if 'vector'\n        arrowDirection: 'from' // [from|towards]\n    },\n\n    initialize: function(scalarField, options) {\n        L.CanvasLayer.Field.prototype.initialize.call(\n            this,\n            scalarField,\n            options\n        );\n        L.Util.setOptions(this, options);\n    },\n\n    _defaultColorScale: function() {\n        return chroma.scale(['white', 'black']).domain(this._field.range);\n    },\n\n    setColor(f) {\n        this.options.color = f; //color scale\n        this.needRedraw();\n    },\n\n    /* eslint-disable no-unused-vars */\n    onDrawLayer: function(viewInfo) {\n        if (!this.isVisible()) return;\n        this._updateOpacity();\n\n        let r = this._getRendererMethod();\n        //console.time('onDrawLayer');\n        r();\n        //console.timeEnd('onDrawLayer');\n    },\n    /* eslint-enable no-unused-vars */\n\n    _getRendererMethod: function() {\n        switch (this.options.type) {\n            case 'colormap':\n                return this._drawImage.bind(this);\n            case 'vector':\n                return this._drawArrows.bind(this);\n            default:\n                throw Error(`Unkwown renderer type: ${this.options.type}`);\n        }\n    },\n\n    _ensureColor: function() {\n        if (this.options.color === null) {\n            this.setColor(this._defaultColorScale());\n        }\n    },\n\n    _showCanvas() {\n        L.CanvasLayer.Field.prototype._showCanvas.call(this);\n        this.needRedraw(); // TODO check spurious redraw (e.g. hide/show without moving map)\n    },\n\n    /**\n     * Draws the field in an ImageData and applying it with putImageData.\n     * Used as a reference: http://geoexamples.com/d3-raster-tools-docs/code_samples/raster-pixels-page.html\n     */\n    _drawImage: function() {\n        this._ensureColor();\n\n        let ctx = this._getDrawingContext();\n        let width = this._canvas.width;\n        let height = this._canvas.height;\n\n        let img = ctx.createImageData(width, height);\n        let data = img.data;\n\n        this._prepareImageIn(data, width, height);\n        ctx.putImageData(img, 0, 0);\n    },\n\n    /**\n     * Prepares the image in data, as array with RGBAs\n     * [R1, G1, B1, A1, R2, G2, B2, A2...]\n     * @private\n     * @param {[[Type]]} data   [[Description]]\n     * @param {Numver} width\n     * @param {Number} height\n     */\n    _prepareImageIn(data, width, height) {\n        let f = this.options.interpolate ? 'interpolatedValueAt' : 'valueAt';\n\n        let pos = 0;\n        for (let j = 0; j < height; j++) {\n            for (let i = 0; i < width; i++) {\n                let pointCoords = this._map.containerPointToLatLng([i, j]);\n                let lon = pointCoords.lng;\n                let lat = pointCoords.lat;\n\n                let v = this._field[f](lon, lat); // 'valueAt' | 'interpolatedValueAt' || TODO check some 'artifacts'\n                if (v !== null) {\n                    let [R, G, B, A] = this._getColorFor(v);                    \n                    data[pos] = R;\n                    data[pos + 1] = G;\n                    data[pos + 2] = B;\n                    data[pos + 3] = parseInt(A * 255); // not percent in alpha but hex 0-255\n                }\n                pos = pos + 4;\n            }\n        }\n    },\n\n    /**\n     * Draws the field as a set of arrows. Direction from 0 to 360 is assumed.\n     */\n    _drawArrows: function() {\n        const bounds = this._pixelBounds();\n        const pixelSize = (bounds.max.x - bounds.min.x) / this._field.nCols;\n\n        var stride = Math.max(\n            1,\n            Math.floor(1.2 * this.options.vectorSize / pixelSize)\n        );\n\n        const ctx = this._getDrawingContext();\n        ctx.strokeStyle = this.options.color;\n\n        var currentBounds = this._map.getBounds();\n\n        for (var y = 0; y < this._field.height; y = y + stride) {\n            for (var x = 0; x < this._field.width; x = x + stride) {\n                let [lon, lat] = this._field._lonLatAtIndexes(x, y);\n                let v = this._field.valueAt(lon, lat);\n                let center = L.latLng(lat, lon);\n                if (v !== null && currentBounds.contains(center)) {\n                    let cell = new Cell(\n                        center,\n                        v,\n                        this.cellXSize,\n                        this.cellYSize\n                    );\n                    this._drawArrow(cell, ctx);\n                }\n            }\n        }\n    },\n\n    _pixelBounds: function() {\n        const bounds = this.getBounds();\n        const northWest = this._map.latLngToContainerPoint(\n            bounds.getNorthWest()\n        );\n        const southEast = this._map.latLngToContainerPoint(\n            bounds.getSouthEast()\n        );\n        var pixelBounds = L.bounds(northWest, southEast);\n        return pixelBounds;\n    },\n\n    _drawArrow: function(cell, ctx) {\n        var projected = this._map.latLngToContainerPoint(cell.center);\n\n        // colormap vs. simple color\n        let color = this.options.color;\n        if (typeof color === 'function') {\n            ctx.strokeStyle = color(cell.value);\n        }\n\n        const size = this.options.vectorSize;\n        ctx.save();\n\n        ctx.translate(projected.x, projected.y);\n\n        let rotationRads = (90 + cell.value) * Math.PI / 180; // from, by default\n        if (this.options.arrowDirection === 'towards') {\n            rotationRads = rotationRads + Math.PI;\n        }\n        ctx.rotate(rotationRads);\n\n        ctx.beginPath();\n        ctx.moveTo(-size / 2, 0);\n        ctx.lineTo(+size / 2, 0);\n        ctx.moveTo(size * 0.25, -size * 0.25);\n        ctx.lineTo(+size / 2, 0);\n        ctx.lineTo(size * 0.25, size * 0.25);\n        ctx.stroke();\n        ctx.restore();\n    },\n\n    /**\n     * Gets a chroma color for a pixel value, according to 'options.color'\n     */\n    _getColorFor(v) {        \n        let rgba = this.options.color(v).rgba();\n        return rgba;\n    }\n});\n\nL.canvasLayer.scalarField = function(scalarField, options) {\n    return new L.CanvasLayer.ScalarField(scalarField, options);\n};\n","/*\n  1.0.1 (downloaded from https://github.com/Sumbera/gLayers.Leaflet/releases/tag/v1.0.1)\n\n  Generic  Canvas Layer for leaflet 0.7 and 1.0-rc,\n  copyright Stanislav Sumbera,  2016 , sumbera.com , license MIT\n  originally created and motivated by L.CanvasOverlay  available here: https://gist.github.com/Sumbera/11114288\n*/\n\nL.CanvasLayer = L.Layer.extend({\n\t\n    // -- initialized is called on prototype\n    initialize: function (options) {\n        this._map = null;\n        this._canvas = null;\n        this._frame = null;\n        this._delegate = null;\n        L.setOptions(this, options);\n    },\n\n    delegate: function (del) {\n        this._delegate = del;\n        return this;\n    },\n\n    needRedraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this.drawLayer, this);\n        }\n        return this;\n    },\n\n    //-------------------------------------------------------------\n    _onLayerDidResize: function (resizeEvent) {\n        this._canvas.width = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    \n    //-------------------------------------------------------------\n    _onLayerDidMove: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this.drawLayer();\n    },\n    \n    //-------------------------------------------------------------\n    getEvents: function () {\n        var events = {\n            resize: this._onLayerDidResize,\n            moveend: this._onLayerDidMove\n        };\n        if (this._map.options.zoomAnimation && L.Browser.any3d) {\n            events.zoomanim = this._animateZoom;\n        }\n\n        return events;\n    },\n    //-------------------------------------------------------------\n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-layer');\n        this.tiles = {};\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.appendChild(this._canvas);\n\n        map.on(this.getEvents(), this);\n\n        var del = this._delegate || this;\n        del.onLayerDidMount && del.onLayerDidMount(); // -- callback\n\n        this.needRedraw();\n    },\n\n    //-------------------------------------------------------------\n    onRemove: function (map) {\n        var del = this._delegate || this;\n        del.onLayerWillUnmount && del.onLayerWillUnmount(); // -- callback\n\n        let pane = this.options.pane ? map.getPanes()[this.options.pane] : map._panes.overlayPane;\n        pane.removeChild(this._canvas);\n\n        map.off(this.getEvents(), this);\n\n        this._canvas = null;\n    },\n\n    //------------------------------------------------------------\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n    \n    // --------------------------------------------------------------------------------\n    LatLonToMercator: function (latlon) {\n        return {\n            x: latlon.lng * 6378137 * Math.PI / 180,\n            y: Math.log(Math.tan((90 + latlon.lat) * Math.PI / 360)) * 6378137\n        };\n    },\n\n    //------------------------------------------------------------------------------\n    drawLayer: function () {\n        // -- todo make the viewInfo properties  flat objects.\n        var size = this._map.getSize();\n        var bounds = this._map.getBounds();\n        var zoom = this._map.getZoom();\n\n        var center = this.LatLonToMercator(this._map.getCenter());\n        var corner = this.LatLonToMercator(this._map.containerPointToLatLng(this._map.getSize()));\n\n        var del = this._delegate || this;\n        del.onDrawLayer && del.onDrawLayer({\n            layer: this,\n            canvas: this._canvas,\n            bounds: bounds,\n            size: size,\n            zoom: zoom,\n            center: center,\n            corner: corner\n        });\n        this._frame = null;\n    },\n\n    //------------------------------------------------------------------------------\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom);\n        var offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), e.zoom, e.center);\n\n        L.DomUtil.setTransform(this._canvas, offset, scale);\n    }\n});\n\nL.canvasLayer = function () {\n    return new L.CanvasLayer();\n};\n","/**\n *  Simple layer with lon-lat points\n *\n *  TODO rename to SimplePoint?\n */\nL.CanvasLayer.SimpleLonLat = L.CanvasLayer.extend({\n    options: {\n        color: 'gray',\n        size: 2\n    },\n\n    initialize: function(points, options) {\n        this.points = points;\n        L.Util.setOptions(this, options);\n    },\n\n    onLayerDidMount: function() {\n        // -- prepare custom drawing\n    },\n\n    onLayerWillUnmount: function() {\n        // -- custom cleanup\n    },\n\n    /* eslint-disable no-unused-vars */\n    setData: function(data) {\n        // -- custom data set\n        this.needRedraw(); // -- call to drawLayer\n    },\n    /* eslint-enable no-unused-vars */\n\n    onDrawLayer: function(viewInfo) {\n        // canvas preparation\n        let g = viewInfo.canvas.getContext('2d');\n        g.clearRect(0, 0, viewInfo.canvas.width, viewInfo.canvas.height);\n        g.fillStyle = this.options.color;\n\n        for (let point of this.points) {\n            let p = viewInfo.layer._map.latLngToContainerPoint(point);\n            g.beginPath();\n            //g.arc(p.x, p.y, 1, 0, Math.PI * 2); // circle | TODO style 'function' as parameter?\n            g.fillRect(p.x, p.y, this.options.size, this.options.size); //simple point\n            g.fill();\n            g.closePath();\n            g.stroke();\n        }\n    },\n\n    getBounds: function() {\n        // TODO: bounding with points...\n        let xs = this.points.map(pt => pt.lng);\n        let ys = this.points.map(pt => pt.lat);\n\n        let xmin = Math.min(...xs);\n        let ymin = Math.min(...ys);\n        let xmax = Math.max(...xs);\n        let ymax = Math.max(...ys);\n\n        let southWest = L.latLng(ymin, xmin),\n            northEast = L.latLng(ymax, xmax);\n        let bounds = L.latLngBounds(southWest, northEast); // TODO FIX ERROR ? half-pixel?\n        return bounds;\n    }\n});\n\nL.canvasLayer.simpleLonLat = function(lonslats, options) {\n    return new L.CanvasLayer.SimpleLonLat(lonslats, options);\n};\n","/**\n *   Control for a simple player for controlling canvas rotation\n */\n\nL.Control.LayersPlayer = L.Control.extend({\n\n    initialize: function (canvasList, paneId, options) {\n        this.activePopup = null;\n        this.canvasList = canvasList;\n        this.paneId = paneId;\n        this.refreshTime = options.refreshTime ? options.refreshTime : 1000;\n        this.loop = options.loop ? options.loop : false;\n        this.currentPlay = null;\n        this.buttons = {};\n        options.cvLst = this.canvasList;\n        L.Util.setOptions(this, options);\n    },\n    \n    //------------------------------------------------------------------\n    onAdd: function (map) {\n        this.currentFrame = 0;\n        this._map = map;\n        this.div = L.DomUtil.create(\n            'div',\n            'leaflet-control'\n        );\n        this.div.style.padding = '10px';\n\n        L.DomEvent\n            .addListener(this.div, 'click', L.DomEvent.stopPropagation)\n            .addListener(this.div, 'click', L.DomEvent.preventDefault);\n        this.div.style.backgroundColor = this.options.background;\n        this.div.style.cursor = 'text';\n        this._createLabels(this.div);\n        this._createButtons(this.div);\n        this.goTo(0);\n        return this.div;\n    },\n    \n    //------------------------------------------------------------------\n    /**\n     * Make only the idxShow-th layer visible. \n     * idxShow: int. From 1 to control.canvasList.length (inclusive)\n     */\n    displayLayer: function (idxShow) {\n        \n        let control = L.Control.LayersPlayer.lastCreated;\n        let paneChildren = control._map.getPane(control.paneId);\n        paneChildren = paneChildren.children;\n        \n        if (paneChildren.length == 0) return;\n        \n        [...Array(control.canvasList.length).keys()].forEach(function (idxCurrent) {\n            let paneChild = paneChildren[idxCurrent+1];\n            let isActive = (idxShow == (idxCurrent+1));\n            \n            /** show or hide */\n            paneChild.style.display = isActive ? 'block' : 'none';\n            \n            /** activate or deactivate onClick response */\n            if (control.onClick && isActive) {\n                control.canvasList[idxCurrent][0].on('click', control.onClick);\n            } else {\n                control.canvasList[idxCurrent][0].off('click');\n            }\n        });\n    },\n    \n    //------------------------------------------------------------------\n    toggleLoop: function () {\n        let control = L.Control.LayersPlayer.lastCreated;\n        control.loop = !control.loop;\n        control._setButtonActive(this, 'toggleLoop', control.loop);\n    },\n    \n    //------------------------------------------------------------------\n    goTo: function (idx) {\n        let control = L.Control.LayersPlayer.lastCreated;\n        this.currentFrame = idx;\n        \n        /** show idx canvas, hide other canvas */\n        this.displayLayer(idx+1);\n        \n        /** update counter */\n        this.div\n            .querySelector('.leaflet-control-layersPlayer-frameCounter')\n            .innerHTML = this._zeroPad(idx+1, 2) + '/' + this._zeroPad(this.canvasList.length, 2);\n        \n        /** update label */\n        this.div\n            .querySelector('.leaflet-control-layersPlayer-frameLabel')\n            .innerHTML = this.canvasList[idx][1];\n            \n        /** update onClick function */\n        if (control.onClick) {\n            this.canvasList[control.currentFrame][0].on('click', control.onClick);\n        }\n        \n        /** update popup content */\n        if (this.activePopup) {\n            let latLng = this.activePopup._latlng;\n            let activeField = this.canvasList[control.currentFrame][0];\n            let cellValue = activeField._field['valueAt'](latLng.lng, latLng.lat);\n            \n            this.canvasList[control.currentFrame][0].fireEvent('click', {\n                latlng: latLng,\n                frameChange: true,\n                value: cellValue\n            });\n        }\n        \n        return this.div;\n    },\n    \n    //------------------------------------------------------------------\n    goFirst: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        control.goTo(0);\n    },\n    \n    //------------------------------------------------------------------\n    goLast: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        let lastId = control.canvasList.length - 1;\n        \n        control.goTo((lastId >= 0) ? lastId : 0);\n    },\n    \n    //------------------------------------------------------------------\n    goNext: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        let nextIdx = control.currentFrame + 1;\n        \n        if (nextIdx < control.canvasList.length){\n            control.goTo(nextIdx);\n        } else if (control.loop){\n            control.goTo(0);\n        } else {\n            control.goTo(control.canvasList.length-1);\n            control.playStop();\n        }\n    },\n    \n    //------------------------------------------------------------------\n    goPrev: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        let nextIdx = control.currentFrame - 1;\n        \n        if (nextIdx >= 0){\n            control.goTo(nextIdx);\n        } else if (control.loop){\n            control.goTo(control.canvasList.length-1);\n        } else {\n            control.goTo(0);\n            control.playStop();\n        }\n    },\n    \n    //------------------------------------------------------------------\n    playBackward: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        control.playStop();\n        control.currentPlay = setInterval(control.goPrev, control.refreshTime);\n        control._setButtonActive(this, 'playBackward', true);\n        control._setButtonActive(control.buttons['playForward'], 'playForward', false);\n    },\n    \n    //------------------------------------------------------------------\n    playForward: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        control.playStop();\n        control.currentPlay = setInterval(control.goNext, control.refreshTime);\n        control._setButtonActive(this, 'playForward', true);\n        control._setButtonActive(control.buttons['playBackward'], 'playBackward', false);\n    },\n    \n    //------------------------------------------------------------------\n    playStop: function() {\n        let control = L.Control.LayersPlayer.lastCreated;\n        if (control.currentPlay != null) {\n            clearInterval(control.currentPlay);\n            control.currentPlay = null;\n        }\n        control._setButtonActive(control.buttons['playForward'], 'playForward', false);\n        control._setButtonActive(control.buttons['playBackward'], 'playBackward', false);\n    },\n    \n    //------------------------------------------------------------------\n    _addStyles: function (domUtilElement, styleDictionary) {\n        Object.keys(styleDictionary).forEach(function(key) {\n            domUtilElement.style[key] = styleDictionary[key];\n        });\n    },\n    \n    //------------------------------------------------------------------\n    _createLabels: function (container) {\n        let n = this.canvasList.length;\n        let d = document.createElement('div');\n        \n        d3\n            .select(d)\n            .attr('class', 'leaflet-control-layersPlayer-title');\n        \n        d3\n            .select(d)\n            .append('span')\n            .style('color', this.options.textColor)\n            .style('text-color', '#777777')\n            .style('display', 'block')\n            .style('margin-bottom', '5px')\n            .style('width', '35px')\n            .style('display', 'block')\n            .style('float', 'left')\n            .attr('class', 'leaflet-control-layersPlayer-frameCounter')\n            .text('00/' + this._zeroPad(n, 2));\n        \n        d3\n            .select(d)\n            .append('span')\n            .style('color', this.options.textColor)\n            .style('display', 'block')\n            .style('margin-bottom', '5px')\n            .style('width', '125px')\n            .style('display', 'block')\n            .style('float', 'left')\n            .attr('class', 'leaflet-control-layersPlayer-frameLabel')\n            .text('Loading labels...');\n        container.innerHTML += d.innerHTML;\n        return null;\n    },\n\n    //------------------------------------------------------------------\n    _createButtons: function (container) {\n        let d = L.DomUtil.create('div', null, container);\n        \n        d.style.width = 'auto';\n        \n        this.buttons['moveFirst'] = this._createMoveFirstButton(d);\n        this.buttons['playBackward'] = this._createPlayBackwardsButton(d);\n        this.buttons['previous'] = this._createPreviousButton(d);\n        \n        this.buttons['stop'] = this._createStopButton(d);\n        \n        this.buttons['next'] = this._createNextButton(d);\n        this.buttons['playForward'] = this._createPlayForwardButton(d);\n        this.buttons['moveLast'] = this._createMoveLastButton(d);\n        \n        this.buttons['toggleLoop'] = this._createToggleLoopButton(d);\n    },\n    \n    //------------------------------------------------------------------\n    _createButton: function (d, id, defaults, onClickFunction) {\n        \n        // set a custom class if it is provided\n        let customClass = null;\n        try {\n            customClass = this.options.buttons[id].cssClass;\n        } catch (ex) {\n            customClass = null;\n        }\n        \n        // create button\n        let button = L.DomUtil.create('div', customClass, d);\n        \n        // set custom styles if they are provided\n        let customStyle = undefined;\n        try {\n            customStyle = this.options.buttons[id].style;\n        } catch (ex) {\n            customStyle = undefined;\n        }\n        if (customStyle) {\n            this._addStyles(button, customStyle);\n        }\n        \n        // set default styles if nothing is provided\n        if ((!customClass) && (!customStyle)){\n            this._addStyles(button, this._buttonsDefaultStyle);\n        }\n        \n        // set innerHTML\n        try {\n            button.innerHTML = this.options.buttons[id].innerHTML || defaults.innerHTML;\n        } catch (ex) {\n            button.innerHTML = defaults.innerHTML;\n        }\n        \n        // set tooltip\n        try {\n            button.setAttribute('title', this.options.buttons[id].title || defaults.title);\n        } catch (ex) {\n            button.setAttribute('title', defaults.title);\n        }\n        \n        L.DomEvent\n            .addListener(button, 'click', onClickFunction);\n        \n        return (button);\n    },\n    \n    //------------------------------------------------------------------\n    _createMoveFirstButton: function (d) {\n        let defaults = {\n            'innerHTML': '|&#9665;',\n            'title': 'First frame'\n        };\n        return this._createButton(d, 'moveFirst', defaults, this.goFirst);\n    },\n    \n    //------------------------------------------------------------------\n    _createPlayBackwardsButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#9668;',\n            'title': 'Play backwards'\n        };\n        return this._createButton(d, 'playBackward', defaults, this.playBackward);\n    },\n    \n    //------------------------------------------------------------------\n    _createPreviousButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#9665;',\n            'title': 'Previous frame'\n        };\n        return this._createButton(d, 'prev', defaults, this.goPrev);\n    },\n    \n    //------------------------------------------------------------------\n    _createNextButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#9655;',\n            'title': 'Next frame'\n        };\n        return this._createButton(d, 'next', defaults, this.goNext);\n    },\n    \n    //------------------------------------------------------------------\n    _createPlayForwardButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#9658;',\n            'title': 'Play Forward'\n        };\n        return this._createButton(d, 'playForward', defaults, this.playForward);\n    },\n    \n    //------------------------------------------------------------------\n    _createStopButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#9632;',\n            'title': 'Stop'\n        };\n        return this._createButton(d, 'stop', defaults, this.playStop);\n    },\n    \n    //------------------------------------------------------------------\n    _createMoveLastButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#9655;|',\n            'title': 'Last frame'\n        };\n        return this._createButton(d, 'moveLast', defaults, this.goLast);\n    },\n    \n    //------------------------------------------------------------------\n    _createToggleLoopButton: function (d) {\n        let defaults = {\n            'innerHTML': '&#8734;',\n            'title': 'Loop'\n        };\n        return this._createButton(d, 'toggleLoop', defaults, this.toggleLoop);\n    },\n    \n    //------------------------------------------------------------------\n    _setButtonActive: function (button, buttonId, isActive) {\n        // get the 'running class' id\n        let buttonClassRunId = undefined;\n        try {\n            buttonClassRunId = this.options.buttons[buttonId].cssClassRun;\n        } catch (ex) {\n            buttonClassRunId = undefined;\n        }\n        if (!buttonClassRunId) { return; }\n        \n        // set/remove it\n        if (isActive) {\n            L.DomUtil.addClass(button, buttonClassRunId);\n        } else {\n            L.DomUtil.removeClass(button, buttonClassRunId);\n        }\n    },\n    \n    //------------------------------------------------------------------\n    _zeroPad: function (num, places) {\n        return String(num).padStart(places, '0');\n    },\n    \n    //------------------------------------------------------------------\n    _buttonsDefaultStyle: {\n        'float': 'left',\n        'display': 'block',\n        'width': '16px',\n        'backgroundColor': '#FFFFFF',\n        'padding': '2px',\n        'border': '1px solid #333333',\n        'cursor': 'pointer',\n        'color': '#111111',\n        'textAlign': 'center'\n    }\n});\n\n/**\n * Only one LayersPlayer controler is expected to exist at a time.\n * A singleton approach is used to create and refeer to the initiated controlers.\n **/\nL.control.layersPlayer = function (canvasList, paneId, options) {\n     \n    let newControler = new L.Control.LayersPlayer(canvasList, paneId, options);\n    \n    // if there is an existing Layer Player controler, destroy it recursively\n    if (L.Control.LayersPlayer.lastCreated) {\n        let clearInner = function (node) {\n            while (node.hasChildNodes()) {\n                clear(node.firstChild);\n            }\n        };\n        let clear = function(node) {\n            while (node.hasChildNodes()) {\n                clear(node.firstChild);\n            }\n            node.parentNode.removeChild(node);\n        };\n        clearInner(L.Control.LayersPlayer.lastCreated.div);\n        delete L.Control.LayersPlayer.lastCreated;\n    }\n    \n    L.Control.LayersPlayer.lastCreated = newControler;\n    return L.Control.LayersPlayer.lastCreated;\n};\n","/**\n * Animated VectorField on canvas\n */\nL.CanvasLayer.VectorFieldAnim = L.CanvasLayer.Field.extend({\n    options: {\n        paths: 800,\n        color: 'white', // html-color | function colorFor(value) [e.g. chromajs.scale]\n        width: 1.0, // number | function widthFor(value)\n        fade: 0.96, // 0 to 1\n        duration: 20, // milliseconds per 'frame'\n        maxAge: 200, // number of maximum frames per path\n        velocityScale: 1 / 5000\n    },\n\n    initialize: function(vectorField, options) {\n        L.CanvasLayer.Field.prototype.initialize.call(\n            this,\n            vectorField,\n            options\n        );\n        L.Util.setOptions(this, options);\n\n        this.timer = null;\n    },\n\n    onLayerDidMount: function() {\n        L.CanvasLayer.Field.prototype.onLayerDidMount.call(this);\n        this._map.on('move resize', this._stopAnimation, this);\n    },\n\n    onLayerWillUnmount: function() {\n        L.CanvasLayer.Field.prototype.onLayerWillUnmount.call(this);\n        this._map.off('move resize', this._stopAnimation, this);\n        this._stopAnimation();\n    },\n\n    _hideCanvas: function _showCanvas() {\n        L.CanvasLayer.Field.prototype._hideCanvas.call(this);\n        this._stopAnimation();\n    },\n\n    onDrawLayer: function(viewInfo) {\n        if (!this._field || !this.isVisible()) return;\n\n        this._updateOpacity();\n\n        let ctx = this._getDrawingContext();\n        let paths = this._prepareParticlePaths();\n\n        // in case we already have a animation running\n        this._stopAnimation();\n\n        this.timer = d3.timer(function() {\n            _moveParticles();\n            _drawParticles();\n        }, this.options.duration);\n\n        let self = this;\n\n        /**\n         * Builds the paths, adding 'particles' on each animation step, considering\n         * their properties (age / position source > target)\n         */\n        function _moveParticles() {\n            // let screenFactor = 1 / self._map.getZoom(); // consider using a 'screenFactor' to ponderate velocityScale\n            paths.forEach(function(par) {\n                if (par.age > self.options.maxAge) {\n                    // restart, on a random x,y\n                    par.age = 0;\n                    self._field.randomPosition(par);\n                }\n\n                let vector = self._field.valueAt(par.x, par.y);\n                if (vector === null) {\n                    par.age = self.options.maxAge;\n                } else {\n                    // the next point will be...\n                    let xt = par.x + vector.u * self.options.velocityScale; //* screenFactor;\n                    let yt = par.y + vector.v * self.options.velocityScale; //* screenFactor;\n\n                    if (self._field.hasValueAt(xt, yt)) {\n                        par.xt = xt;\n                        par.yt = yt;\n                        par.m = vector.magnitude();\n                    } else {\n                        // not visible anymore...\n                        par.age = self.options.maxAge;\n                    }\n                }\n                par.age += 1;\n            });\n        }\n\n        /**\n         * Draws the paths on each step\n         */\n        function _drawParticles() {\n            // Previous paths...\n            let prev = ctx.globalCompositeOperation;\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            //ctx.globalCompositeOperation = 'source-over';\n            ctx.globalCompositeOperation = prev;\n\n            // fading paths...\n            ctx.fillStyle = `rgba(0, 0, 0, ${self.options.fade})`;\n            ctx.lineWidth = self.options.width;\n            ctx.strokeStyle = self.options.color;\n\n            // New paths\n            paths.forEach(function(par) {\n                self._drawParticle(viewInfo, ctx, par);\n            });\n        }\n    },\n\n    _drawParticle(viewInfo, ctx, par) {\n        let source = new L.latLng(par.y, par.x);\n        let target = new L.latLng(par.yt, par.xt);\n\n        if (\n            viewInfo.bounds.contains(source) &&\n            par.age <= this.options.maxAge\n        ) {\n            let pA = viewInfo.layer._map.latLngToContainerPoint(source);\n            let pB = viewInfo.layer._map.latLngToContainerPoint(target);\n\n            ctx.beginPath();\n            ctx.moveTo(pA.x, pA.y);\n            ctx.lineTo(pB.x, pB.y);\n\n            // next-step movement\n            par.x = par.xt;\n            par.y = par.yt;\n\n            // colormap vs. simple color\n            let color = this.options.color;\n            if (typeof color === 'function') {\n                ctx.strokeStyle = color(par.m);\n            }\n\n            let width = this.options.width;\n            if (typeof width === 'function') {\n                ctx.lineWidth = width(par.m);\n            }\n\n            ctx.stroke();\n        }\n    },\n\n    _prepareParticlePaths: function() {\n        let paths = [];\n\n        for (var i = 0; i < this.options.paths; i++) {\n            let p = this._field.randomPosition();\n            p.age = this._randomAge();\n            paths.push(p);\n        }\n        return paths;\n    },\n\n    _randomAge: function() {\n        return Math.floor(Math.random() * this.options.maxAge);\n    },\n\n    _stopAnimation: function() {\n        if (this.timer) {\n            this.timer.stop();\n        }\n    }\n});\n\nL.canvasLayer.vectorFieldAnim = function(vectorField, options) {\n    return new L.CanvasLayer.VectorFieldAnim(vectorField, options);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n *  2D Vector\n */\nexport default class Vector {\n\n    constructor(u, v) {\n        this.u = u;\n        this.v = v;\n    }\n\n    /**\n     * Magnitude\n     * @returns {Number}\n     */\n    magnitude() {\n        return Math.sqrt(this.u * this.u + this.v * this.v);\n    }\n\n    /**\n     * Angle in degrees (0 to 360º) --> Towards\n     * N is 0º and E is 90º\n     * @returns {Number}\n     */\n    directionTo() {\n        let verticalAngle = Math.atan2(this.u, this.v);\n        let inDegrees = verticalAngle * (180.0 / Math.PI);\n        if (inDegrees < 0) {\n            inDegrees = inDegrees + 360.0;\n        }\n        return inDegrees;\n    }\n\n    /**\n     * Angle in degrees (0 to 360º) From x-->\n     * N is 0º and E is 90º\n     * @returns {Number}\n     */\n    directionFrom() {\n        let a = this.directionTo();\n        let opposite = (a + 180.0) % 360.0;\n        return opposite;\n    }\n\n    /*\n        Degrees --> text\n        new Dictionary<int, string>\n        {\n            //{0, 23, 45, 68, 90, 113, 135, 158, 180, 203, 225, 248, 270, 293, 315, 338, 360};\n            {0, 'N'},\n            {23, 'NNE'},\n            {45, 'NE'},\n            {68, 'ENE'},\n            {90, 'E'},\n            {113, 'ESE'},\n            {135, 'SE'},\n            {158, 'SSE'},\n            {180, 'S'},\n            {203, 'SSW'},\n            {225, 'SW'},\n            {248, 'WSW'},\n            {270, 'W'},\n            {293, 'WNW'},\n            {315, 'NW'},\n            {338, 'NNW'},\n            {360, 'N'}\n        };\n    */\n}\n","function pointInPolygon(p, polygon) {\n    var i = 0;\n    var ii = 0;\n    var k = 0;\n    var f = 0;\n    var u1 = 0;\n    var v1 = 0;\n    var u2 = 0;\n    var v2 = 0;\n    var currentP = null;\n    var nextP = null;\n\n    var x = p[0];\n    var y = p[1];\n\n    var numContours = polygon.length;\n    for (i; i < numContours; i++) {\n        ii = 0;\n        var contourLen = polygon[i].length - 1;\n        var contour = polygon[i];\n\n        currentP = contour[0];\n        if (currentP[0] !== contour[contourLen][0] &&\n            currentP[1] !== contour[contourLen][1]) {\n            throw new Error('First and last coordinates in a ring must be the same')\n        }\n\n        u1 = currentP[0] - x;\n        v1 = currentP[1] - y;\n\n        for (ii; ii < contourLen; ii++) {\n            nextP = contour[ii + 1];\n\n            v2 = nextP[1] - y;\n\n            if ((v1 < 0 && v2 < 0) || (v1 > 0 && v2 > 0)) {\n                currentP = nextP;\n                v1 = v2;\n                u1 = currentP[0] - x;\n                continue\n            }\n\n            u2 = nextP[0] - p[0];\n\n            if (v2 > 0 && v1 <= 0) {\n                f = (u1 * v2) - (u2 * v1);\n                if (f > 0) { k = k + 1; }\n                else if (f === 0) { return 0 }\n            } else if (v1 > 0 && v2 <= 0) {\n                f = (u1 * v2) - (u2 * v1);\n                if (f < 0) { k = k + 1; }\n                else if (f === 0) { return 0 }\n            } else if (v2 === 0 && v1 < 0) {\n                f = (u1 * v2) - (u2 * v1);\n                if (f === 0) { return 0 }\n            } else if (v1 === 0 && v2 < 0) {\n                f = u1 * v2 - u2 * v1;\n                if (f === 0) { return 0 }\n            } else if (v1 === 0 && v2 === 0) {\n                if (u2 <= 0 && u1 >= 0) {\n                    return 0\n                } else if (u1 <= 0 && u2 >= 0) {\n                    return 0\n                }\n            }\n            currentP = nextP;\n            v1 = v2;\n            u1 = u2;\n        }\n    }\n\n    if (k % 2 === 0) { return false }\n    return true\n}\n\nexport default pointInPolygon;\n","import Cell from './Cell';\nimport inside from '@turf/boolean-point-in-polygon';\n\n/**\n *  Abstract class for a set of values (Vector | Scalar)\n *  assigned to a regular 2D-grid (lon-lat), aka 'a Raster source'\n */\nexport default class Field {\n    constructor(params) {\n        this.params = params;\n\n        this.nCols = params['nCols'];\n        this.nRows = params['nRows'];\n\n        // alias\n        this.width = params['nCols'];\n        this.height = params['nRows'];\n\n        // ll = lower-left\n        this.xllCorner = params['xllCorner'];\n        this.yllCorner = params['yllCorner'];\n\n        // ur = upper-right\n        this.xurCorner =\n            params['xllCorner'] + params['nCols'] * params['cellXSize'];\n        this.yurCorner =\n            params['yllCorner'] + params['nRows'] * params['cellYSize'];\n\n        this.cellXSize = params['cellXSize'];\n        this.cellYSize = params['cellYSize'];\n\n        this.grid = null; // to be defined by subclasses\n        this.isContinuous = this.xurCorner - this.xllCorner >= 360;\n        this.longitudeNeedsToBeWrapped = this.xurCorner > 180; // [0, 360] --> [-180, 180]\n\n        this._inFilter = null;\n        this._spatialMask = null;\n    }\n\n    /**\n     * Builds a grid with a value at each point (either Vector or Number)\n     * Original params must include the required input values, following\n     * x-ascending & y-descending order (same as in ASCIIGrid)\n     * @abstract\n     * @private\n     * @returns {Array.<Array.<Vector|Number>>} - grid[row][column]--> Vector|Number\n     */\n    _buildGrid() {\n        throw new TypeError('Must be overriden');\n    }\n\n    _updateRange() {\n        this.range = this._calculateRange();\n    }\n\n    /**\n     * Number of cells in the grid (rows * cols)\n     * @returns {Number}\n     */\n    numCells() {\n        return this.nRows * this.nCols;\n    }\n\n    /**\n     * A list with every cell\n     * @returns {Array<Cell>} - cells (x-ascending & y-descending order)\n     */\n    getCells(stride = 1) {\n        let cells = [];\n        for (let j = 0; j < this.nRows; j = j + stride) {\n            for (let i = 0; i < this.nCols; i = i + stride) {\n                let [lon, lat] = this._lonLatAtIndexes(i, j);\n                let center = L.latLng(lat, lon);\n                let value = this._valueAtIndexes(i, j);\n                let c = new Cell(center, value, this.cellXSize, this.cellYSize);\n                cells.push(c); // <<\n            }\n        }\n        return cells;\n    }\n\n    /**\n     * Apply a filter function to field values\n     * @param   {Function} f - boolean function\n     */\n    setFilter(f) {\n        this._inFilter = f;\n        this._updateRange();\n    }\n\n    /**\n     * Apply a spatial mask to field values\n     * @param {L.GeoJSON} m \n     */\n    setSpatialMask(m) {\n        this._spatialMask = m;\n    }\n\n    /**\n     * Grid extent\n     * @returns {Number[]} [xmin, ymin, xmax, ymax]\n     */\n    extent() {\n        let [xmin, xmax] = this._getWrappedLongitudes();\n        return [xmin, this.yllCorner, xmax, this.yurCorner];\n    }\n\n    /**\n     * [xmin, xmax] in [-180, 180] range\n     */\n    _getWrappedLongitudes() {\n        let xmin = this.xllCorner;\n        let xmax = this.xurCorner;\n\n        if (this.longitudeNeedsToBeWrapped) {\n            if (this.isContinuous) {\n                xmin = -180;\n                xmax = 180;\n            } else {\n                // not sure about this (just one particular case, but others...?)\n                xmax = this.xurCorner - 360;\n                xmin = this.xllCorner - 360;\n                /* eslint-disable no-console */\n                // console.warn(`are these xmin: ${xmin} & xmax: ${xmax} OK?`);\n                // TODO: Better throw an exception on no-controlled situations.\n                /* eslint-enable no-console */\n            }\n        }\n        return [xmin, xmax];\n    }\n\n    /**\n     * Returns whether or not the grid contains the point, considering\n     * the spatialMask if it has been previously set\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    contains(lon, lat) {\n        if (this._spatialMask) {\n            return this._pointInMask(lon, lat);\n        }\n        return this._pointInExtent(lon, lat);\n    }\n\n    /**\n     * Checks if coordinates are inside the Extent (considering wrapped longitudes if needed)\n     * @param {Number} lon \n     * @param {Number} lat \n     */\n    _pointInExtent(lon, lat) {\n        let [xmin, xmax] = this._getWrappedLongitudes();\n        let longitudeIn = lon >= xmin && lon <= xmax;\n        let latitudeIn = lat >= this.yllCorner && lat <= this.yurCorner;\n        return longitudeIn && latitudeIn;\n    }\n\n    /**\n     * Check if coordinates are inside the spatialMask (Point in Polygon analysis)\n     * @param {Number} lon \n     * @param {Number} lat \n     */\n    _pointInMask(lon, lat) {\n        const pt = {\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: [lon, lat] // geojson, lon-lat order !\n            },\n            properties: {}\n        };\n        const poly = this._spatialMask;\n        return inside(pt, poly);\n    }\n\n    /**\n     * Returns if the grid doesn't contain the point\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    notContains(lon, lat) {\n        return !this.contains(lon, lat);\n    }\n\n    /**\n     * Interpolated value at lon-lat coordinates (bilinear method)\n     * @param   {Number} longitude\n     * @param   {Number} latitude\n     * @returns {Vector|Number} [u, v, magnitude]\n     *                          \n     * Source: https://github.com/cambecc/earth > product.js\n     */\n    interpolatedValueAt(lon, lat) {\n        if (this.notContains(lon, lat)) return null;\n\n        let [i, j] = this._getDecimalIndexes(lon, lat);\n        return this.interpolatedValueAtIndexes(i, j);\n    }\n\n    /**\n     * Interpolated value at i-j indexes (bilinear method)\n     * @param   {Number} i\n     * @param   {Number} j\n     * @returns {Vector|Number} [u, v, magnitude]\n     *\n     * Source: https://github.com/cambecc/earth > product.js\n     */\n    interpolatedValueAtIndexes(i, j) {\n        //         1      2           After converting λ and φ to fractional grid indexes i and j, we find the\n        //        fi  i   ci          four points 'G' that enclose point (i, j). These points are at the four\n        //         | =1.4 |           corners specified by the floor and ceiling of i and j. For example, given\n        //      ---G--|---G--- fj 8   i = 1.4 and j = 8.3, the four surrounding grid points are (1, 8), (2, 8),\n        //    j ___|_ .   |           (1, 9) and (2, 9).\n        //  =8.3   |      |\n        //      ---G------G--- cj 9   Note that for wrapped grids, the first column is duplicated as the last\n        //         |      |           column, so the index ci can be used without taking a modulo.\n\n        let indexes = this._getFourSurroundingIndexes(i, j);\n        let [fi, ci, fj, cj] = indexes;\n        let values = this._getFourSurroundingValues(fi, ci, fj, cj);\n        if (values) {\n            let [g00, g10, g01, g11] = values;\n            return this._doInterpolation(i - fi, j - fj, g00, g10, g01, g11);\n        }\n        return null;\n    }\n\n    /**\n     * Get decimal indexes\n     * @private\n     * @param {Number} lon\n     * @param {Number} lat\n     * @returns {Array}    [[Description]]\n     */\n    _getDecimalIndexes(lon, lat) {\n        if (this.longitudeNeedsToBeWrapped && lon < this.xllCorner) {\n            lon = lon + 360;\n        }\n        let i = (lon - this.xllCorner) / this.cellXSize;\n        let j = (this.yurCorner - lat) / this.cellYSize;\n        return [i, j];\n    }\n\n    /**\n     * Get surrounding indexes (integer), clampling on borders\n     * @private\n     * @param   {Number} i - decimal index\n     * @param   {Number} j - decimal index\n     * @returns {Array} [fi, ci, fj, cj]\n     */\n    _getFourSurroundingIndexes(i, j) {\n        let fi = Math.floor(i);\n        let ci = fi + 1;\n        // duplicate colum to simplify interpolation logic (wrapped value)\n        if (this.isContinuous && ci >= this.nCols) {\n            ci = 0;\n        }\n        ci = this._clampColumnIndex(ci);\n\n        let fj = this._clampRowIndex(Math.floor(j));\n        let cj = this._clampRowIndex(fj + 1);\n\n        return [fi, ci, fj, cj];\n    }\n\n    /**\n     * Get four surrounding values or null if not available,\n     * from 4 integer indexes\n     * @private\n     * @param   {Number} fi\n     * @param   {Number} ci\n     * @param   {Number} fj\n     * @param   {Number} cj\n     * @returns {Array} \n     */\n    _getFourSurroundingValues(fi, ci, fj, cj) {\n        var row;\n        if ((row = this.grid[fj])) {\n            // upper row ^^\n            var g00 = row[fi]; // << left\n            var g10 = row[ci]; // right >>\n            if (\n                this._isValid(g00) &&\n                this._isValid(g10) &&\n                (row = this.grid[cj])\n            ) {\n                // lower row vv\n                var g01 = row[fi]; // << left\n                var g11 = row[ci]; // right >>\n                if (this._isValid(g01) && this._isValid(g11)) {\n                    return [g00, g10, g01, g11]; // 4 values found!\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Nearest value at lon-lat coordinates\n     * @param   {Number} longitude\n     * @param   {Number} latitude\n     * @returns {Vector|Number}\n     */\n    valueAt(lon, lat) {\n        if (this.notContains(lon, lat)) return null;\n\n        let [i, j] = this._getDecimalIndexes(lon, lat);\n        let ii = Math.floor(i);\n        let jj = Math.floor(j);\n\n        const ci = this._clampColumnIndex(ii);\n        const cj = this._clampRowIndex(jj);\n\n        let value = this._valueAtIndexes(ci, cj);\n        if (this._inFilter) {\n            if (!this._inFilter(value)) return null;\n        }\n\n        return value;\n    }\n\n    /**\n     * Returns whether or not the field has a value at the point\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    hasValueAt(lon, lat) {\n        let value = this.valueAt(lon, lat);\n        let hasValue = value !== null;\n\n        let included = true;\n        if (this._inFilter) {\n            included = this._inFilter(value);\n        }\n        return hasValue && included;\n    }\n\n    /**\n     * Returns if the grid has no value at the point\n     * @param   {Number} lon - longitude\n     * @param   {Number} lat - latitude\n     * @returns {Boolean}\n     */\n    notHasValueAt(lon, lat) {\n        return !this.hasValueAt(lon, lat);\n    }\n\n    /**\n     * Gives a random position to 'o' inside the grid\n     * @param {Object} [o] - an object (eg. a particle)\n     * @returns {{x: Number, y: Number}} - object with x, y (lon, lat)\n     */\n    randomPosition(o = {}) {\n        let i = (Math.random() * this.nCols) | 0;\n        let j = (Math.random() * this.nRows) | 0;\n\n        o.x = this._longitudeAtX(i);\n        o.y = this._latitudeAtY(j);\n\n        return o;\n    }\n\n    /**\n     * Value for grid indexes\n     * @param   {Number} i - column index (integer)\n     * @param   {Number} j - row index (integer)\n     * @returns {Vector|Number}\n     */\n    _valueAtIndexes(i, j) {\n        return this.grid[j][i]; // <-- j,i !!\n    }\n\n    /**\n     * Lon-Lat for grid indexes\n     * @param   {Number} i - column index (integer)\n     * @param   {Number} j - row index (integer)\n     * @returns {Number[]} [lon, lat]\n     */\n    _lonLatAtIndexes(i, j) {\n        let lon = this._longitudeAtX(i);\n        let lat = this._latitudeAtY(j);\n\n        return [lon, lat];\n    }\n\n    /**\n     * Longitude for grid-index\n     * @param   {Number} i - column index (integer)\n     * @returns {Number} longitude at the center of the cell\n     */\n    _longitudeAtX(i) {\n        let halfXPixel = this.cellXSize / 2.0;\n        let lon = this.xllCorner + halfXPixel + i * this.cellXSize;\n        if (this.longitudeNeedsToBeWrapped) {\n            lon = lon > 180 ? lon - 360 : lon;\n        }\n        return lon;\n    }\n\n    /**\n     * Latitude for grid-index\n     * @param   {Number} j - row index (integer)\n     * @returns {Number} latitude at the center of the cell\n     */\n    _latitudeAtY(j) {\n        let halfYPixel = this.cellYSize / 2.0;\n        return this.yurCorner - halfYPixel - j * this.cellYSize;\n    }\n\n    /**\n     * Apply the interpolation\n     * @abstract\n     * @private\n     */\n    /* eslint-disable no-unused-vars */\n    _doInterpolation(x, y, g00, g10, g01, g11) {\n        throw new TypeError('Must be overriden');\n    }\n    /* eslint-disable no-unused-vars */\n\n    /**\n     * Check the column index is inside the field,\n     * adjusting to min or max when needed\n     * @private\n     * @param   {Number} ii - index\n     * @returns {Number} i - inside the allowed indexes\n     */\n    _clampColumnIndex(ii) {\n        let i = ii;\n        if (ii < 0) {\n            i = 0;\n        }\n        let maxCol = this.nCols - 1;\n        if (ii > maxCol) {\n            i = maxCol;\n        }\n        return i;\n    }\n\n    /**\n     * Check the row index is inside the field,\n     * adjusting to min or max when needed\n     * @private\n     * @param   {Number} jj index\n     * @returns {Number} j - inside the allowed indexes\n     */\n    _clampRowIndex(jj) {\n        let j = jj;\n        if (jj < 0) {\n            j = 0;\n        }\n        let maxRow = this.nRows - 1;\n        if (jj > maxRow) {\n            j = maxRow;\n        }\n        return j;\n    }\n\n    /**\n     * Is valid (not 'null' nor 'undefined')\n     * @private\n     * @param   {Object} x object\n     * @returns {Boolean}\n     */\n    _isValid(x) {\n        return x !== null && x !== undefined;\n    }\n}\n","// index.ts\nimport pip from \"point-in-polygon-hao\";\nimport { getCoord, getGeom } from \"@turf/invariant\";\nfunction booleanPointInPolygon(point, polygon, options = {}) {\n  if (!point) {\n    throw new Error(\"point is required\");\n  }\n  if (!polygon) {\n    throw new Error(\"polygon is required\");\n  }\n  const pt = getCoord(point);\n  const geom = getGeom(polygon);\n  const type = geom.type;\n  const bbox = polygon.bbox;\n  let polys = geom.coordinates;\n  if (bbox && inBBox(pt, bbox) === false) {\n    return false;\n  }\n  if (type === \"Polygon\") {\n    polys = [polys];\n  }\n  let result = false;\n  for (var i = 0; i < polys.length; ++i) {\n    const polyResult = pip(pt, polys[i]);\n    if (polyResult === 0) return options.ignoreBoundary ? false : true;\n    else if (polyResult) result = true;\n  }\n  return result;\n}\nfunction inBBox(pt, bbox) {\n  return bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1];\n}\nvar turf_boolean_point_in_polygon_default = booleanPointInPolygon;\nexport {\n  booleanPointInPolygon,\n  turf_boolean_point_in_polygon_default as default\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","import Field from './Field';\n\n/**\n * Scalar Field\n */\nexport default class ScalarField extends Field {\n    /**\n   * Creates a ScalarField from the content of an ASCIIGrid file\n   * @param   {String}   asc\n   * @returns {ScalarField}\n   */\n    static fromASCIIGrid(asc, scaleFactor = 1) {\n    //console.time('ScalarField from ASC');\n\n        let lines = asc.split('\\n');\n\n        // Header\n        var header = ScalarField._parseASCIIGridHeader(lines.slice(0, 6));\n\n        // Data (left-right and top-down)\n        let zs = [];\n        for (let i = 6; i < lines.length; i++) {\n            let line = lines[i].trim();\n            if (line === '') break;\n\n            let items = line.split(' ');\n            items.forEach((it) => {\n                let floatItem = parseFloat(it);\n                let v =\n          floatItem !== header.noDataValue ? floatItem * scaleFactor : null;\n                zs.push(v);\n            });\n        }\n        let p = header;\n        p.zs = zs;\n\n        //console.timeEnd('ScalarField from ASC');\n        return new ScalarField(p);\n    }\n\n    /**\n   * Parse an ASCII Grid header, made with 6 lines\n   * It allows the use of XLLCORNER/YLLCORNER or XLLCENTER/YLLCENTER conventions\n   * @param {Array.String} headerLines\n   */\n    static _parseASCIIGridHeader(headerLines) {\n        try {\n            const headerItems = headerLines.map((line) => {\n                var items = line.split(' ').filter((i) => i != '');\n                var param = items[0].trim().toUpperCase();\n                var value = parseFloat(items[1].trim());\n                return {\n                    [param]: value,\n                };\n            });\n\n            const usesCorner = 'XLLCORNER' in headerItems[2];\n            const cellSize = headerItems[4]['CELLSIZE'];\n\n            const header = {\n                nCols: parseInt(headerItems[0]['NCOLS']),\n                nRows: parseInt(headerItems[1]['NROWS']),\n                xllCorner: usesCorner\n                    ? headerItems[2]['XLLCORNER']\n                    : headerItems[2]['XLLCENTER'] - cellSize / 2,\n                yllCorner: usesCorner\n                    ? headerItems[3]['YLLCORNER']\n                    : headerItems[3]['YLLCENTER'] - cellSize / 2,\n                cellXSize: cellSize,\n                cellYSize: cellSize,\n                noDataValue: headerItems[5]['NODATA_VALUE'],\n            };\n            return header;\n        } catch (err) {\n            throw new Error(`Not a valid ASCIIGrid Header: ${err}`);\n        }\n    }\n\n    /**\n   * Creates a ScalarField from the content of a GeoTIFF file\n   * @param   {ArrayBuffer}   data\n   * @param   {Number}   bandIndex\n   * @returns {ScalarField}\n   */\n    static fromGeoTIFF(data, bandIndex = 0) {\n        return ScalarField.multipleFromGeoTIFF(data, [bandIndex])[0];\n    }\n\n    /**\n   * Creates a ScalarField array (one per band) from the content of a GeoTIFF file\n   * @param   {ArrayBuffer}   data\n   * @param   {Array}   bandIndexes - if not provided all bands are returned\n   * @returns {Array.<ScalarField>}\n   */\n    static multipleFromGeoTIFF(data, bandIndexes) {\n    //console.time('ScalarField from GeoTIFF');\n\n        let tiff = GeoTIFF.parse(data); // geotiff.js\n        let image = tiff.getImage();\n        let rasters = image.readRasters();\n        let tiepoint = image.getTiePoints()[0];\n        let fileDirectory = image.getFileDirectory();\n        let [xScale, yScale] = fileDirectory.ModelPixelScale;\n\n        if (typeof bandIndexes === 'undefined' || bandIndexes.length === 0) {\n            bandIndexes = [...Array(rasters.length).keys()];\n        }\n\n        let scalarFields = [];\n        scalarFields = bandIndexes.map(function (bandIndex) {\n            let zs = rasters[bandIndex]; // left-right and top-down order\n\n            if (fileDirectory.GDAL_NODATA) {\n                let noData = parseFloat(fileDirectory.GDAL_NODATA);\n                // console.log(noData);\n                let simpleZS = Array.from(zs); // to simple array, so null is allowed | TODO efficiency??\n                zs = simpleZS.map(function (z) {\n                    return z === noData ? null : z;\n                });\n            }\n\n            let p = {\n                nCols: image.getWidth(),\n                nRows: image.getHeight(),\n                xllCorner: tiepoint.x,\n                yllCorner: tiepoint.y - image.getHeight() * yScale,\n                cellXSize: xScale,\n                cellYSize: yScale,\n                zs: zs,\n            };\n            return new ScalarField(p);\n        });\n\n        //console.timeEnd('ScalarField from GeoTIFF');\n        return scalarFields;\n    }\n\n    constructor(params) {\n        super(params);\n        this.zs = params['zs'];\n\n        this.grid = this._buildGrid();\n        this._updateRange();\n    //console.log(`ScalarField created (${this.nCols} x ${this.nRows})`);\n    }\n\n    /**\n   * Builds a grid with a Number at each point, from an array\n   * 'zs' following x-ascending & y-descending order\n   * (same as in ASCIIGrid)\n   * @private\n   * @returns {Array.<Array.<Number>>} - grid[row][column]--> Number\n   */\n    _buildGrid() {\n        let grid = this._arrayTo2d(this.zs, this.nRows, this.nCols);\n        return grid;\n    }\n\n    _arrayTo2d(array, nRows, nCols) {\n        let grid = [];\n        let p = 0;\n        for (var j = 0; j < nRows; j++) {\n            var row = [];\n            for (var i = 0; i < nCols; i++, p++) {\n                let z = array[p];\n                row[i] = this._isValid(z) ? z : null; // <<<\n            }\n            grid[j] = row;\n        }\n        return grid;\n    }\n\n    _newDataArrays(params) {\n        params['zs'] = [];\n    }\n\n    _pushValueToArrays(params, value) {\n        params['zs'].push(value);\n    }\n\n    _makeNewFrom(params) {\n        return new ScalarField(params);\n    }\n\n    /**\n   * Calculate min & max values\n   * @private\n   * @returns {Array} - [min, max]\n   */\n    _calculateRange() {\n        var data = this.zs;\n        if (this._inFilter) {\n            data = data.filter(this._inFilter);\n        }\n        return [d3.min(data), d3.max(data)];\n    }\n\n    /**\n   * Bilinear interpolation for Number\n   * https://en.wikipedia.org/wiki/Bilinear_interpolation\n   * @param   {Number} x\n   * @param   {Number} y\n   * @param   {Number} g00\n   * @param   {Number} g10\n   * @param   {Number} g01\n   * @param   {Number} g11\n   * @returns {Number}\n   */\n    _doInterpolation(x, y, g00, g10, g01, g11) {\n        var rx = 1 - x;\n        var ry = 1 - y;\n        return g00 * rx * ry + g10 * x * ry + g01 * rx * y + g11 * x * y;\n    }\n}\n","import Vector from './Vector';\nimport Field from './Field';\nimport ScalarField from './ScalarField';\n\n/**\n *  A set of vectors assigned to a regular 2D-grid (lon-lat)\n *  (e.g. a raster representing winds for a region)\n */\nexport default class VectorField extends Field {\n    /**\n     * Creates a VectorField from the content of two ASCIIGrid files\n     * @param   {String} ascU - with u-component\n     * @param   {String} ascV - with v-component\n     * @returns {VectorField}\n     */\n    static fromASCIIGrids(ascU, ascV, scaleFactor = 1) {\n        let u = ScalarField.fromASCIIGrid(ascU, scaleFactor);\n        let v = ScalarField.fromASCIIGrid(ascV, scaleFactor);\n        let p = VectorField._paramsFromScalarFields(u, v);\n\n        return new VectorField(p);\n    }\n\n    /**\n     * Creates a VectorField from the content of two different Geotiff files\n     * @param   {ArrayBuffer} gtU - geotiff data with u-component (band 0)\n     * @param   {ArrayBuffer} gtV - geotiff data with v-component (band 0)\n     * @returns {VectorField}\n     */\n    static fromGeoTIFFs(gtU, gtV) {\n        let u = ScalarField.fromGeoTIFF(gtU);\n        let v = ScalarField.fromGeoTIFF(gtV);\n        let p = VectorField._paramsFromScalarFields(u, v);\n\n        return new VectorField(p);\n    }\n\n    /**\n     * Creates a VectorField from the content of Multiband Geotiff\n     * @param   {ArrayBuffer} geotiffData - multiband\n     * @param   {Array} bandIndexesForUV\n     * @returns {VectorField}\n     */\n    static fromMultibandGeoTIFF(geotiffData, bandIndexesForUV = [0, 1]) {\n        let [u, v] = ScalarField.multipleFromGeoTIFF(\n            geotiffData,\n            bandIndexesForUV\n        );\n        let p = VectorField._paramsFromScalarFields(u, v);\n\n        return new VectorField(p);\n    }\n\n    /**\n     * Build parameters for VectorField, from 2 ScalarFields.\n     * No validation at all (nor interpolation) is applied, so u and v\n     * must be 'compatible' from the source\n     * @param   {ScalarField} u\n     * @param   {ScalarField} v\n     * @returns {Object} - parameters to build VectorField\n     */\n    static _paramsFromScalarFields(u, v) {\n        // TODO check u & v compatibility (cellSize...)\n        let p = {\n            nCols: u.nCols,\n            nRows: u.nRows,\n            xllCorner: u.xllCorner,\n            yllCorner: u.yllCorner,\n            cellXSize: u.cellXSize,\n            cellYSize: u.cellYSize,\n            us: u.zs,\n            vs: v.zs\n        };\n        return p;\n    }\n\n    constructor(params) {\n        super(params);\n\n        this.us = params['us'];\n        this.vs = params['vs'];\n        this.grid = this._buildGrid();\n        this.range = this._calculateRange();\n    }\n\n    /**\n     * Get a derived field, from a computation on\n     * the VectorField\n     * @param   {String} type ['magnitude' | 'directionTo' | 'directionFrom']\n     * @returns {ScalarField}\n     */\n    getScalarField(type) {\n        let f = this._getFunctionFor(type);\n        let p = {\n            nCols: this.params.nCols,\n            nRows: this.params.nRows,\n            xllCorner: this.params.xllCorner,\n            yllCorner: this.params.yllCorner,\n            cellXSize: this.params.cellXSize,\n            cellYSize: this.params.cellYSize,\n            zs: this._applyOnField(f)\n        };\n        return new ScalarField(p);\n    }\n\n    _getFunctionFor(type) {\n        return function(u, v) {\n            let uv = new Vector(u, v);\n            return uv[type](); // magnitude, directionTo, directionFrom\n        };\n    }\n\n    _applyOnField(func) {\n        let zs = [];\n        let n = this.numCells();\n        for (var i = 0; i < n; i++) {\n            let u = this.us[i];\n            let v = this.vs[i];\n            if (this._isValid(u) && this._isValid(v)) {\n                zs.push(func(u, v));\n            } else {\n                zs.push(null);\n            }\n        }\n        return zs;\n    }\n\n    /**\n     * Builds a grid with a Vector at each point, from two arrays\n     * 'us' and 'vs' following x-ascending & y-descending order\n     * (same as in ASCIIGrid)\n     * @returns {Array.<Array.<Vector>>} - grid[row][column]--> Vector\n     */\n    _buildGrid() {\n        let grid = this._arraysTo2d(this.us, this.vs, this.nRows, this.nCols);\n        return grid;\n    }\n\n    _arraysTo2d(us, vs, nRows, nCols) {\n        let grid = [];\n        let p = 0;\n\n        for (var j = 0; j < nRows; j++) {\n            var row = [];\n            for (var i = 0; i < nCols; i++, p++) {\n                let u = us[p],\n                    v = vs[p];\n                let valid = this._isValid(u) && this._isValid(v);\n                row[i] = valid ? new Vector(u, v) : null; // <<<\n            }\n            grid[j] = row;\n        }\n        return grid;\n    }\n\n    _newDataArrays(params) {\n        params['us'] = [];\n        params['vs'] = [];\n    }\n    _pushValueToArrays(params, value) {\n        //console.log(value);\n        params['us'].push(value.u);\n        params['vs'].push(value.v);\n    }\n    _makeNewFrom(params) {\n        return new VectorField(params);\n    }\n\n    /**\n     * Calculate min & max values (magnitude)\n     * @private\n     * @returns {Array}\n     */\n    _calculateRange() {\n        // TODO make a clearer method for getting these vectors...\n        let vectors = this.getCells()\n            .map(pt => pt.value)\n            .filter(function(v) {\n                return v !== null;\n            });\n\n        if (this._inFilter) {\n            vectors = vectors.filter(this._inFilter);\n        }\n\n        // TODO check memory crash with high num of vectors!\n        let magnitudes = vectors.map(v => v.magnitude());\n        let min = d3.min(magnitudes);\n        let max = d3.max(magnitudes);\n\n        return [min, max];\n    }\n\n    /**\n     * Bilinear interpolation for Vector\n     * https://en.wikipedia.org/wiki/Bilinear_interpolation\n     * @param   {Number} x\n     * @param   {Number} y\n     * @param   {Number[]} g00\n     * @param   {Number[]} g10\n     * @param   {Number[]} g01\n     * @param   {Number[]} g11\n     * @returns {Vector}\n     */\n    _doInterpolation(x, y, g00, g10, g01, g11) {\n        var rx = 1 - x;\n        var ry = 1 - y;\n        var a = rx * ry,\n            b = x * ry,\n            c = rx * y,\n            d = x * y;\n        var u = g00.u * a + g10.u * b + g01.u * c + g11.u * d;\n        var v = g00.v * a + g10.v * b + g01.v * c + g11.v * d;\n        return new Vector(u, v);\n    }\n\n    /**\n     * Is valid (not 'null' nor 'undefined')\n     * @private\n     * @param   {Object} x object\n     * @returns {Boolean}\n     */\n    _isValid(x) {\n        return x !== null && x !== undefined;\n    }\n}\n","// base\nimport Vector from './Vector.js';\nwindow.L.Vector = Vector;\n\nimport Cell from './Cell.js';\nwindow.L.Cell = Cell;\n\nimport Field from './Field.js';\nwindow.L.Field = Field;\n\nimport ScalarField from './ScalarField.js';\nwindow.L.ScalarField = ScalarField;\n\nimport VectorField from './VectorField.js';\nwindow.L.VectorField = VectorField;\n\n// layer\nrequire('./layer/L.CanvasLayer.js');\nrequire('./layer/L.CanvasLayer.SimpleLonLat.js');\nrequire('./layer/L.CanvasLayer.Field.js');\nrequire('./layer/L.CanvasLayer.ScalarField.js');\nrequire('./layer/L.CanvasLayer.VectorFieldAnim.js');\n\n// control\nrequire('./control/L.Control.ColorBar.js');\nrequire('./control/L.Control.LayersPlayer.js');\n"],"names":["L","CanvasLayer","Field","extend","options","mouseMoveCursor","value","noValue","opacity","onClick","onMouseMove","inFilter","initialize","field","Util","setOptions","this","_visible","setData","getEvents","events","prototype","call","zoomstart","_hideCanvas","bind","zoomend","_showCanvas","onLayerDidMount","_enableIdentify","_ensureCanvasAlignment","show","hide","_disableIdentify","isVisible","_canvas","style","visibility","_map","on","_onClick","_onMouseMove","off","topLeft","containerPointToLayerPoint","DomUtil","setPosition","onLayerWillUnmount","needRedraw","_field","onDrawLayer","viewInfo","TypeError","setFilter","fire","f","setOpacity","_updateOpacity","getBounds","bb","extent","southWest","latLng","northEast","latLngBounds","e","v","_queryValue","_changeCursorOn","getContainer","cursor","valueAt","latlng","lng","lat","_getDrawingContext","g","getContext","clearRect","width","height","Control","ColorBar","position","margin","background","textColor","steps","decimals","units","title","labels","textLabels","labelFontSize","labelTextPosition","color","range","onAdd","map","div","create","padding","DomEvent","addListener","stopPropagation","preventDefault","backgroundColor","innerHTML","palette","d","document","createElement","d3","select","append","attr","text","svg","_createSvgIn","_appendColorBarTo","_appendLabelsTo","spaceForLabels","colorPerValue","_getColorPerValue","w","length","buckets","selectAll","data","enter","i","hex","toFixed","positionPerLabelValue","_getPositionPerLabelValue","label","min","max","delta","xPositionFor","scaleLinear","domain","index","control","colorBar","Cell","constructor","center","xSize","ySize","arguments","undefined","equals","anotherCell","_equalValues","anotherValue","type","name","Number","Vector","u","halfX","halfY","cLat","cLng","ul","lr","Math","x","low","high","rgb","_clipped","_unclipped","slice","limit","classToType","toLowerCase","obj","Object","toString","args","keyOrder","Array","split","filter","k","l","PI","rnd2","a","round","rnd3","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","reverse3","arr","reverse","format","autodetect","me","mode","last","sorted","sort","b","p","chk","test","Error","apply","_rgb","clip_rgb","push","join","chroma","version","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RE_HEX","RE_HEXA","match","substr","parseInt","r","unpack","str","hxa","n","keys","input","named","h","rest","alpha","mutate","clipped","labConstants","Kn","labWhitePoint","Xn","Yn","Zn","t0","t1","t2","t3","kE","kKE","kK","RefWhiteRGB","X","Y","Z","MtxRGB2XYZ","m00","m01","m02","m10","m11","m12","m20","m21","m22","MtxXYZ2RGB","As","Bs","Cs","MtxAdaptMa","MtxAdaptMaI","ILLUMINANTS","Map","setLabWhitePoint","ill","get","String","getLabWhitePoint","compand","linear","sign","abs","pow","xyz2rgb","y","z","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","fy","fx","fz","fx3","fz3","lab2xyz","b_","gammaAdjustSRGB","companded","rgb2xyz","xr","yr","zr","xyz2lab","lab","assign","darken","amount","brighten","darker","brighter","mc","channel","src","indexOf","luminance","lum","cur_lum","max_iter","mid","interpolate","lm","rgb2luminance","luminance_x","col1","col2","interpolator","mix","premultiply","sin","cos","c","isNaN","sqrt","atan2","NaN","lch","hcl","forEach","m","saturate","desaturate","set","charAt","out","tint","shade","xyz0","xyz1","lrgb","x1","y1","z1","x2","y2","z2","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","hsl","hsv","hcg","hsi","oklch","num","c1","c2","floor","minRgb","maxRgb","_g","_c","q","t","min_","s","acos","h_","max_","rgb2hsv","multiplyMatrices","A","B","isArray","B_cols","_","product","row","col","reduce","LMStoXYZ","LMSnl","XYZ","LMS","cbrt","XYZ_to_OKLab","oklab","colors","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","analyze","limits","from","tOut","tBreaks","every","_m","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","numColors","result","dm","dd","left","right","ascending","end","__range__","samples","asc","cache","gamma","nodata","rnd","rgba","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","log","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","best","mindist","dist","newCentroids","kClusters","tmpKMeansBreaks","B_threshold","cool","scale","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewerTypes","typeMap","Proxy","target","prop","lower","has","getOwnPropertyNames","cmyk","hsla","prevWhitePoint","cssColor","laba","lcha","INT_OR_PCT","source","FLOAT_OR_PCT","PCT","RE_S","SEP","COMMA","ANLGE","ALPHA","RE_RGB","RegExp","RE_RGB_LEGACY","RE_RGBA_LEGACY","RE_HSL","RE_HSL_LEGACY","RE_HSLA_LEGACY","RE_LAB","RE_LCH","RE_OKLAB","RE_OKLCH","roundRGB","percentToAbsolute","pct","signed","endsWith","parseFloat","substring","noneToValue","noneValue","css2rgb","css","trim","replace","wp","gl","kelvin","temp","temperature","minTemp","maxTemp","average","weights","xyz","_average_lrgb","first","shift","cnt","dx","dy","ci","xyz2","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","newrow","binom_row","el","Color","contrast","l1","l2","contrastAPCA","bg","l_text","l_bg","Y_text","Y_bg","S_norm","S_rev","C","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","exp","Rt","distance","sum_sq","random","code","scales","valid","ScalarField","vectorSize","arrowDirection","scalarField","_defaultColorScale","setColor","_getRendererMethod","_drawImage","_drawArrows","_ensureColor","ctx","img","createImageData","_prepareImageIn","putImageData","pos","pointCoords","containerPointToLatLng","lon","R","_getColorFor","bounds","_pixelBounds","pixelSize","nCols","stride","strokeStyle","currentBounds","_lonLatAtIndexes","contains","cell","cellXSize","cellYSize","_drawArrow","northWest","latLngToContainerPoint","getNorthWest","southEast","getSouthEast","projected","size","save","translate","rotationRads","rotate","beginPath","moveTo","lineTo","stroke","restore","canvasLayer","Layer","_frame","_delegate","delegate","del","requestAnimFrame","drawLayer","_onLayerDidResize","resizeEvent","newSize","_onLayerDidMove","resize","moveend","zoomAnimation","Browser","any3d","zoomanim","_animateZoom","tiles","getSize","animated","addClass","pane","getPanes","_panes","overlayPane","appendChild","onRemove","removeChild","addTo","addLayer","LatLonToMercator","latlon","zoom","getZoom","getCenter","corner","layer","canvas","getZoomScale","offset","_latLngToNewLayerPoint","setTransform","SimpleLonLat","points","fillStyle","point","fillRect","fill","closePath","xs","pt","ys","xmin","ymin","xmax","ymax","simpleLonLat","lonslats","LayersPlayer","canvasList","paneId","activePopup","refreshTime","loop","currentPlay","buttons","cvLst","currentFrame","_createLabels","_createButtons","goTo","displayLayer","idxShow","lastCreated","paneChildren","getPane","children","idxCurrent","paneChild","isActive","display","toggleLoop","_setButtonActive","idx","querySelector","_zeroPad","_latlng","cellValue","fireEvent","frameChange","goFirst","goLast","lastId","goNext","nextIdx","playStop","goPrev","playBackward","setInterval","playForward","clearInterval","_addStyles","domUtilElement","styleDictionary","container","_createMoveFirstButton","_createPlayBackwardsButton","_createPreviousButton","_createStopButton","_createNextButton","_createPlayForwardButton","_createMoveLastButton","_createToggleLoopButton","_createButton","id","defaults","onClickFunction","customClass","cssClass","ex","customStyle","button","_buttonsDefaultStyle","setAttribute","buttonId","buttonClassRunId","cssClassRun","removeClass","places","padStart","layersPlayer","newControler","clearInner","node","hasChildNodes","clear","firstChild","parentNode","VectorFieldAnim","paths","fade","duration","maxAge","velocityScale","vectorField","timer","_stopAnimation","_prepareParticlePaths","par","age","self","randomPosition","vector","xt","yt","hasValueAt","magnitude","prev","globalCompositeOperation","lineWidth","_drawParticle","_drawParticles","pA","pB","_randomAge","stop","vectorFieldAnim","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","hasOwnProperty","directionTo","inDegrees","directionFrom","polygon","ii","u1","v1","u2","v2","currentP","nextP","numContours","contourLen","contour","params","nRows","xllCorner","yllCorner","xurCorner","yurCorner","grid","isContinuous","longitudeNeedsToBeWrapped","_inFilter","_spatialMask","_buildGrid","_updateRange","_calculateRange","numCells","getCells","cells","_valueAtIndexes","setSpatialMask","_getWrappedLongitudes","_pointInMask","_pointInExtent","longitudeIn","latitudeIn","coord","geometry","coordinates","getCoord","geom","geojson","bbox","polys","inBBox","polyResult","ignoreBoundary","inside","properties","notContains","interpolatedValueAt","_getDecimalIndexes","interpolatedValueAtIndexes","indexes","_getFourSurroundingIndexes","fi","fj","cj","_getFourSurroundingValues","g00","g10","g01","g11","_doInterpolation","_clampColumnIndex","_clampRowIndex","_isValid","jj","hasValue","included","notHasValueAt","_longitudeAtX","_latitudeAtY","halfXPixel","halfYPixel","maxCol","maxRow","fromASCIIGrid","scaleFactor","lines","header","_parseASCIIGridHeader","zs","line","it","floatItem","noDataValue","headerLines","headerItems","items","param","toUpperCase","usesCorner","cellSize","err","fromGeoTIFF","bandIndex","multipleFromGeoTIFF","bandIndexes","image","GeoTIFF","parse","getImage","rasters","readRasters","tiepoint","getTiePoints","fileDirectory","getFileDirectory","xScale","yScale","ModelPixelScale","scalarFields","GDAL_NODATA","noData","getWidth","getHeight","super","_arrayTo2d","array","_newDataArrays","_pushValueToArrays","_makeNewFrom","rx","ry","VectorField","fromASCIIGrids","ascU","ascV","_paramsFromScalarFields","fromGeoTIFFs","gtU","gtV","fromMultibandGeoTIFF","geotiffData","bandIndexesForUV","us","vs","getScalarField","_getFunctionFor","_applyOnField","func","_arraysTo2d","vectors","magnitudes","window","require"],"sourceRoot":""}